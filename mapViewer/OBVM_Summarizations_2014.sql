update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.CENTERPOINT_SUMMARY (CENTERPOINT_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT C.CENTERPOINT_ID, ''AvgBareGround'', ROUND(AVG(AC.ACTUAL_VALUE), 2) FROM OBVM.CENTERPOINT C, OBVM.QUADRAT_DATA D, OBVM.ATTRIBUTE_CLASS AC WHERE D.ATTRIBUTE_ID = ''BareGround'' AND D.ATTRIBUTE_VALUE IS NOT NULL AND AC.ATTRIBUTE_ID = D.ATTRIBUTE_ID AND D.ATTRIBUTE_VALUE = AC.DISPLAY_VALUE AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID GROUP BY C.CENTERPOINT_ID' where summarization_id = 'AvgBareGround' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.CENTERPOINT_SUMMARY (CENTERPOINT_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT D.CENTERPOINT_ID, ''AvgBareGroundDFC'', case 
when (select count (DESIRED_FUTURE_CONDITION_ID) from OBVM.DESIRED_FUTURE_CONDITION DFC WHERE DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID and DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID) = 0 then null 
when D.SUMMARIZED_VALUE < (select DFC.DFC_LOW from OBVM.DESIRED_FUTURE_CONDITION DFC WHERE DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID and DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID) then -1 
when D.SUMMARIZED_VALUE > (select DFC.DFC_HIGH from OBVM.DESIRED_FUTURE_CONDITION DFC WHERE DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID and DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID) then 1 
else 0 end 
FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS WHERE D.SUMMARIZATION_ID = ''AvgBareGround'' AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID' where summarization_id = 'AvgBareGroundDFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.CENTERPOINT_SUMMARY (CENTERPOINT_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT C.CENTERPOINT_ID, ''AvgDecSawLit'', ROUND(AVG(Cast(D.ATTRIBUTE_VALUE as decimal)), 2) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_DATA D WHERE D.ATTRIBUTE_ID = ''DecSawLit'' AND D.ATTRIBUTE_VALUE IS NOT NULL AND D.ATTRIBUTE_VALUE NOT IN (''-9999'', ''-8888'', ''ZZ'', ''XX'') AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID GROUP BY C.CENTERPOINT_ID' where summarization_id = 'AvgDecSawLit' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.CENTERPOINT_SUMMARY (CENTERPOINT_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT C.CENTERPOINT_ID, ''AvgDwarfShrubCov'', ROUND(AVG(AC.ACTUAL_VALUE), 2) FROM OBVM.CENTERPOINT C, OBVM.QUADRAT_DATA D, OBVM.ATTRIBUTE_CLASS AC WHERE D.ATTRIBUTE_ID = ''DwfShrbCov'' AND D.ATTRIBUTE_VALUE IS NOT NULL AND AC.ATTRIBUTE_ID = D.ATTRIBUTE_ID AND D.ATTRIBUTE_VALUE = AC.DISPLAY_VALUE AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID GROUP BY C.CENTERPOINT_ID' where summarization_id = 'AvgDwarfShrubCov' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.CENTERPOINT_SUMMARY (CENTERPOINT_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT D.CENTERPOINT_ID, ''AvgDwarfShrubCovDFC'', case 
when (select count (DESIRED_FUTURE_CONDITION_ID) from OBVM.DESIRED_FUTURE_CONDITION DFC WHERE DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID and DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID) = 0 then null 
when D.SUMMARIZED_VALUE < (select DFC.DFC_LOW from OBVM.DESIRED_FUTURE_CONDITION DFC WHERE DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID and DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID) then -1 
when D.SUMMARIZED_VALUE > (select DFC.DFC_HIGH from OBVM.DESIRED_FUTURE_CONDITION DFC WHERE DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID and DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID) then 1 
else 0 end 
FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS WHERE D.SUMMARIZATION_ID = ''AvgDwarfShrubCov'' AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID' where summarization_id = 'AvgDwarfShrubCovDFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.CENTERPOINT_SUMMARY (CENTERPOINT_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT C.CENTERPOINT_ID, ''AvgExoticCov'', ROUND(AVG(AC.ACTUAL_VALUE), 2) FROM OBVM.CENTERPOINT C, OBVM.QUADRAT_DATA D, OBVM.ATTRIBUTE_CLASS AC WHERE D.ATTRIBUTE_ID = ''ExoticCov'' AND D.ATTRIBUTE_VALUE IS NOT NULL AND AC.ATTRIBUTE_ID = D.ATTRIBUTE_ID AND D.ATTRIBUTE_VALUE = AC.DISPLAY_VALUE AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID GROUP BY C.CENTERPOINT_ID' where summarization_id = 'AvgExoticCov' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.CENTERPOINT_SUMMARY (CENTERPOINT_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT D.CENTERPOINT_ID, ''AvgExoticCovDFC'', case 
when (select count (DESIRED_FUTURE_CONDITION_ID) from OBVM.DESIRED_FUTURE_CONDITION DFC WHERE DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID and DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID) = 0 then null 
when D.SUMMARIZED_VALUE < (select DFC.DFC_LOW from OBVM.DESIRED_FUTURE_CONDITION DFC WHERE DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID and DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID) then -1 
when D.SUMMARIZED_VALUE > (select DFC.DFC_HIGH from OBVM.DESIRED_FUTURE_CONDITION DFC WHERE DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID and DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID) then 1 
else 0 end 
FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS WHERE D.SUMMARIZATION_ID = ''AvgExoticCov'' AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID' where summarization_id = 'AvgExoticCovDFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.CENTERPOINT_SUMMARY (CENTERPOINT_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT C.CENTERPOINT_ID, ''AvgFNAIShrubCov'', ROUND(AVG(AC.ACTUAL_VALUE), 2) FROM OBVM.CENTERPOINT C, OBVM.QUADRAT_DATA D, OBVM.ATTRIBUTE_CLASS AC WHERE D.ATTRIBUTE_ID = ''FNAIShrCov'' AND D.ATTRIBUTE_VALUE IS NOT NULL AND AC.ATTRIBUTE_ID = D.ATTRIBUTE_ID AND D.ATTRIBUTE_VALUE = AC.DISPLAY_VALUE AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID GROUP BY C.CENTERPOINT_ID' where summarization_id = 'AvgFNAIShrubCov' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.CENTERPOINT_SUMMARY (CENTERPOINT_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT C.CENTERPOINT_ID, ''AvgHerbCov'', ROUND(AVG(AC.ACTUAL_VALUE), 2) FROM OBVM.CENTERPOINT C, OBVM.QUADRAT_DATA D, OBVM.ATTRIBUTE_CLASS AC WHERE D.ATTRIBUTE_ID = ''HerbCov'' AND D.ATTRIBUTE_VALUE IS NOT NULL AND AC.ATTRIBUTE_ID = D.ATTRIBUTE_ID AND D.ATTRIBUTE_VALUE = AC.DISPLAY_VALUE AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID GROUP BY C.CENTERPOINT_ID' where summarization_id = 'AvgHerbCov' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.CENTERPOINT_SUMMARY (CENTERPOINT_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT D.CENTERPOINT_ID, ''AvgHerbCovDFC'', case 
when (select count (DESIRED_FUTURE_CONDITION_ID) from OBVM.DESIRED_FUTURE_CONDITION DFC WHERE DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID and DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID) = 0 then null 
when D.SUMMARIZED_VALUE < (select DFC.DFC_LOW from OBVM.DESIRED_FUTURE_CONDITION DFC WHERE DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID and DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID) then -1 
when D.SUMMARIZED_VALUE > (select DFC.DFC_HIGH from OBVM.DESIRED_FUTURE_CONDITION DFC WHERE DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID and DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID) then 1 
else 0 end 
FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS WHERE D.SUMMARIZATION_ID = ''AvgHerbCov'' AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID' where summarization_id = 'AvgHerbCovDFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.CENTERPOINT_SUMMARY (CENTERPOINT_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT C.CENTERPOINT_ID, ''AvgIlexCov'', ROUND(AVG(AC.ACTUAL_VALUE), 2) FROM OBVM.CENTERPOINT C, OBVM.QUADRAT_DATA D, OBVM.ATTRIBUTE_CLASS AC WHERE D.ATTRIBUTE_ID = ''IlexCov'' AND D.ATTRIBUTE_VALUE IS NOT NULL AND AC.ATTRIBUTE_ID = D.ATTRIBUTE_ID AND D.ATTRIBUTE_VALUE = AC.DISPLAY_VALUE AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID GROUP BY C.CENTERPOINT_ID' where summarization_id = 'AvgIlexCov' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.CENTERPOINT_SUMMARY (CENTERPOINT_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT C.CENTERPOINT_ID, ''AvgLichenCov'', ROUND(AVG(AC.ACTUAL_VALUE), 2) FROM OBVM.CENTERPOINT C, OBVM.QUADRAT_DATA D, OBVM.ATTRIBUTE_CLASS AC WHERE D.ATTRIBUTE_ID = ''LichenCov'' AND D.ATTRIBUTE_VALUE IS NOT NULL AND AC.ATTRIBUTE_ID = D.ATTRIBUTE_ID AND D.ATTRIBUTE_VALUE = AC.DISPLAY_VALUE AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID GROUP BY C.CENTERPOINT_ID' where summarization_id = 'AvgLichenCov' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.CENTERPOINT_SUMMARY (CENTERPOINT_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT C.CENTERPOINT_ID, ''AvgMaxScrbHtQ'', (AVG(Cast(D.ATTRIBUTE_VALUE as decimal)) * 0.03280839) FROM OBVM.CENTERPOINT C, OBVM.QUADRAT_DATA D WHERE D.ATTRIBUTE_ID like ''MaxScrbHt%'' AND D.ATTRIBUTE_VALUE IS NOT NULL AND D.ATTRIBUTE_VALUE <> ''-9999'' AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID GROUP BY C.CENTERPOINT_ID' where summarization_id = 'AvgMaxScrbHtQ' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.CENTERPOINT_SUMMARY (CENTERPOINT_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT C.CENTERPOINT_ID, ''AvgMaxScrHt'', ROUND(AVG(D.SUMMARIZED_VALUE), 2) FROM OBVM.CENTERPOINT C, OBVM.QUADRAT_SUMMARY D WHERE D.SUMMARIZATION_ID = ''AvgMaxScrbHtQ'' AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID GROUP BY C.CENTERPOINT_ID' where summarization_id = 'AvgMaxScrHt' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.CENTERPOINT_SUMMARY (CENTERPOINT_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT D.CENTERPOINT_ID, ''AvgMaxScrHtDFC'', case 
when (select count (DESIRED_FUTURE_CONDITION_ID) from OBVM.DESIRED_FUTURE_CONDITION DFC WHERE DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID and DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID) = 0 then null 
when D.SUMMARIZED_VALUE < (select DFC.DFC_LOW from OBVM.DESIRED_FUTURE_CONDITION DFC WHERE DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID and DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID) then -1 
when D.SUMMARIZED_VALUE > (select DFC.DFC_HIGH from OBVM.DESIRED_FUTURE_CONDITION DFC WHERE DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID and DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID) then 1 
else 0 end 
FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS WHERE D.SUMMARIZATION_ID = ''AvgMaxScrHt'' AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID' where summarization_id = 'AvgMaxScrHtDFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.CENTERPOINT_SUMMARY (CENTERPOINT_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT C.CENTERPOINT_ID, ''AvgMaxSerHt'', ROUND(AVG(D.SUMMARIZED_VALUE), 2) FROM OBVM.CENTERPOINT C, OBVM.QUADRAT_SUMMARY D WHERE D.SUMMARIZATION_ID = ''AvgMaxSerHtQ'' AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID GROUP BY C.CENTERPOINT_ID' where summarization_id = 'AvgMaxSerHt' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.CENTERPOINT_SUMMARY (CENTERPOINT_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT D.CENTERPOINT_ID, ''AvgMaxSerHtDFC'', case 
when (select count (DESIRED_FUTURE_CONDITION_ID) from OBVM.DESIRED_FUTURE_CONDITION DFC WHERE DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID and DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID) = 0 then null 
when D.SUMMARIZED_VALUE < (select DFC.DFC_LOW from OBVM.DESIRED_FUTURE_CONDITION DFC WHERE DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID and DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID) then -1 
when D.SUMMARIZED_VALUE > (select DFC.DFC_HIGH from OBVM.DESIRED_FUTURE_CONDITION DFC WHERE DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID and DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID) then 1 
else 0 end 
FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS WHERE D.SUMMARIZATION_ID = ''AvgMaxSerHt'' AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID' where summarization_id = 'AvgMaxSerHtDFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.QUADRAT_SUMMARY (CENTERPOINT_ID, QUADRAT, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT C.CENTERPOINT_ID, D.QUADRAT, ''AvgMaxSerHtQ'', (AVG(Cast(D.ATTRIBUTE_VALUE as decimal)) * 0.03280839) FROM OBVM.CENTERPOINT C, OBVM.QUADRAT_DATA D WHERE C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND D.ATTRIBUTE_ID like ''MaxSerHt%'' AND D.ATTRIBUTE_VALUE IS NOT NULL AND D.ATTRIBUTE_VALUE <> ''-9999'' GROUP BY C.CENTERPOINT_ID, D.QUADRAT' where summarization_id = 'AvgMaxSerHtQ' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.CENTERPOINT_SUMMARY (CENTERPOINT_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT C.CENTERPOINT_ID, ''AvgMaxShrbDBH'', ROUND(AVG(AC.ACTUAL_VALUE), 2) FROM OBVM.CENTERPOINT C, OBVM.QUADRAT_DATA D, OBVM.ATTRIBUTE_CLASS AC WHERE D.ATTRIBUTE_ID = ''MaxShrbDBH'' AND D.ATTRIBUTE_VALUE IS NOT NULL AND AC.ATTRIBUTE_ID = D.ATTRIBUTE_ID AND D.ATTRIBUTE_VALUE = AC.DISPLAY_VALUE AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID GROUP BY C.CENTERPOINT_ID' where summarization_id = 'AvgMaxShrbDBH' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.CENTERPOINT_SUMMARY (CENTERPOINT_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT C.CENTERPOINT_ID, ''AvgMaxShrHt'', ROUND(AVG(D.SUMMARIZED_VALUE), 2) FROM OBVM.CENTERPOINT C, OBVM.QUADRAT_SUMMARY D WHERE D.SUMMARIZATION_ID = ''AvgMaxShrHtQ'' AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID GROUP BY C.CENTERPOINT_ID' where summarization_id = 'AvgMaxShrHt' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.CENTERPOINT_SUMMARY (CENTERPOINT_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT D.CENTERPOINT_ID, ''AvgMaxShrHtDFC'', case 
when (select count (DESIRED_FUTURE_CONDITION_ID) from OBVM.DESIRED_FUTURE_CONDITION DFC WHERE DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID and DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID) = 0 then null 
when D.SUMMARIZED_VALUE < (select DFC.DFC_LOW from OBVM.DESIRED_FUTURE_CONDITION DFC WHERE DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID and DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID) then -1 
when D.SUMMARIZED_VALUE > (select DFC.DFC_HIGH from OBVM.DESIRED_FUTURE_CONDITION DFC WHERE DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID and DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID) then 1 
else 0 end 
FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS WHERE D.SUMMARIZATION_ID = ''AvgMaxShrHt'' AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID' where summarization_id = 'AvgMaxShrHtDFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.QUADRAT_SUMMARY (CENTERPOINT_ID, QUADRAT, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT C.CENTERPOINT_ID, D.QUADRAT, ''AvgMaxShrHtQ'', (AVG(Cast(D.ATTRIBUTE_VALUE as decimal)) * 0.03280839) FROM OBVM.CENTERPOINT C, OBVM.QUADRAT_DATA D WHERE C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND D.ATTRIBUTE_ID like ''MaxShrbHt%'' AND D.ATTRIBUTE_VALUE IS NOT NULL AND D.ATTRIBUTE_VALUE <> ''-9999'' GROUP BY C.CENTERPOINT_ID, D.QUADRAT' where summarization_id = 'AvgMaxShrHtQ' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.CENTERPOINT_SUMMARY (CENTERPOINT_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT C.CENTERPOINT_ID, ''AvgPANABScov'', ROUND(AVG(AC.ACTUAL_VALUE), 3) FROM OBVM.CENTERPOINT C, OBVM.QUADRAT_DATA D, OBVM.ATTRIBUTE_CLASS AC WHERE D.ATTRIBUTE_ID = ''PanAbsCov'' AND D.ATTRIBUTE_VALUE IS NOT NULL AND AC.ATTRIBUTE_ID = D.ATTRIBUTE_ID AND D.ATTRIBUTE_VALUE = AC.DISPLAY_VALUE AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID GROUP BY C.CENTERPOINT_ID' where summarization_id = 'AvgPANABScov' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.CENTERPOINT_SUMMARY (CENTERPOINT_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT D.CENTERPOINT_ID, ''AvgPANABScovDFC'', case 
when (select count (DESIRED_FUTURE_CONDITION_ID) from OBVM.DESIRED_FUTURE_CONDITION DFC WHERE DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID and DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID) = 0 then null 
when D.SUMMARIZED_VALUE < (select DFC.DFC_LOW from OBVM.DESIRED_FUTURE_CONDITION DFC WHERE DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID and DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID) then -1 
when D.SUMMARIZED_VALUE > (select DFC.DFC_HIGH from OBVM.DESIRED_FUTURE_CONDITION DFC WHERE DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID and DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID) then 1 
else 0 end 
FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS WHERE D.SUMMARIZATION_ID = ''AvgPANABScov'' AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID' where summarization_id = 'AvgPANABScovDFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.CENTERPOINT_SUMMARY (CENTERPOINT_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT C.CENTERPOINT_ID, ''AvgRunnerOakCov'', ROUND(AVG(AC.ACTUAL_VALUE), 2) FROM OBVM.CENTERPOINT C, OBVM.QUADRAT_DATA D, OBVM.ATTRIBUTE_CLASS AC WHERE D.ATTRIBUTE_ID = ''RunOakCov'' AND D.ATTRIBUTE_VALUE IS NOT NULL AND AC.ATTRIBUTE_ID = D.ATTRIBUTE_ID AND D.ATTRIBUTE_VALUE = AC.DISPLAY_VALUE AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID GROUP BY C.CENTERPOINT_ID' where summarization_id = 'AvgRunnerOakCov' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.CENTERPOINT_SUMMARY (CENTERPOINT_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT D.CENTERPOINT_ID, ''AvgRunnerOakCovDFC'', case 
when (select count (DESIRED_FUTURE_CONDITION_ID) from OBVM.DESIRED_FUTURE_CONDITION DFC WHERE DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID and DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID) = 0 then null 
when D.SUMMARIZED_VALUE < (select DFC.DFC_LOW from OBVM.DESIRED_FUTURE_CONDITION DFC WHERE DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID and DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID) then -1 
when D.SUMMARIZED_VALUE > (select DFC.DFC_HIGH from OBVM.DESIRED_FUTURE_CONDITION DFC WHERE DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID and DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID) then 1 
else 0 end 
FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS WHERE D.SUMMARIZATION_ID = ''AvgRunnerOakCov'' AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID' where summarization_id = 'AvgRunnerOakCovDFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.CENTERPOINT_SUMMARY (CENTERPOINT_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT C.CENTERPOINT_ID, ''AvgScrubCov'', ROUND(AVG(AC.ACTUAL_VALUE), 2) FROM OBVM.CENTERPOINT C, OBVM.QUADRAT_DATA D, OBVM.ATTRIBUTE_CLASS AC WHERE D.ATTRIBUTE_ID = ''ScrubCov'' AND D.ATTRIBUTE_VALUE IS NOT NULL AND AC.ATTRIBUTE_ID = D.ATTRIBUTE_ID AND D.ATTRIBUTE_VALUE = AC.DISPLAY_VALUE AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID GROUP BY C.CENTERPOINT_ID' where summarization_id = 'AvgScrubCov' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.CENTERPOINT_SUMMARY (CENTERPOINT_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT C.CENTERPOINT_ID, ''AvgSerenoaCov'', ROUND(AVG(AC.ACTUAL_VALUE), 2) FROM OBVM.CENTERPOINT C, OBVM.QUADRAT_DATA D, OBVM.ATTRIBUTE_CLASS AC WHERE D.ATTRIBUTE_ID = ''SerenoaCov'' AND D.ATTRIBUTE_VALUE IS NOT NULL AND AC.ATTRIBUTE_ID = D.ATTRIBUTE_ID AND D.ATTRIBUTE_VALUE = AC.DISPLAY_VALUE AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID GROUP BY C.CENTERPOINT_ID' where summarization_id = 'AvgSerenoaCov' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.CENTERPOINT_SUMMARY (CENTERPOINT_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT D.CENTERPOINT_ID, ''AvgSerenoaCovDFC'', case 
when (select count (DESIRED_FUTURE_CONDITION_ID) from OBVM.DESIRED_FUTURE_CONDITION DFC WHERE DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID and DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID) = 0 then null 
when D.SUMMARIZED_VALUE < (select DFC.DFC_LOW from OBVM.DESIRED_FUTURE_CONDITION DFC WHERE DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID and DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID) then -1 
when D.SUMMARIZED_VALUE > (select DFC.DFC_HIGH from OBVM.DESIRED_FUTURE_CONDITION DFC WHERE DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID and DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID) then 1 
else 0 end 
FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS WHERE D.SUMMARIZATION_ID = ''AvgSerenoaCov'' AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID' where summarization_id = 'AvgSerenoaCovDFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.CENTERPOINT_SUMMARY (CENTERPOINT_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT C.CENTERPOINT_ID, ''AvgSerenoaIlexCov'', ROUND(AVG(D.SUMMARIZED_VALUE), 3) FROM OBVM.CENTERPOINT C, OBVM.QUADRAT_SUMMARY D WHERE D.SUMMARIZATION_ID = ''SerenoaIlexCov'' AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID GROUP BY C.CENTERPOINT_ID' where summarization_id = 'AvgSerenoaIlexCov' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.CENTERPOINT_SUMMARY (CENTERPOINT_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT D.CENTERPOINT_ID, ''AvgSerenoaIlexCovDFC'', case 
when (select count (DESIRED_FUTURE_CONDITION_ID) from OBVM.DESIRED_FUTURE_CONDITION DFC WHERE DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID and DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID) = 0 then null 
when D.SUMMARIZED_VALUE < (select DFC.DFC_LOW from OBVM.DESIRED_FUTURE_CONDITION DFC WHERE DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID and DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID) then -1 
when D.SUMMARIZED_VALUE > (select DFC.DFC_HIGH from OBVM.DESIRED_FUTURE_CONDITION DFC WHERE DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID and DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID) then 1 
else 0 end 
FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS WHERE D.SUMMARIZATION_ID = ''AvgSerenoaIlexCov'' AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID' where summarization_id = 'AvgSerenoaIlexCovDFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.CENTERPOINT_SUMMARY (CENTERPOINT_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT C.CENTERPOINT_ID, ''AvgShbCovMinusDwf'', ROUND(AVG(D.SUMMARIZED_VALUE), 2) FROM OBVM.CENTERPOINT C, OBVM.QUADRAT_SUMMARY D WHERE D.SUMMARIZATION_ID = ''ShbCovMinusDwf'' AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID GROUP BY C.CENTERPOINT_ID' where summarization_id = 'AvgShbCovMinusDwf' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.CENTERPOINT_SUMMARY (CENTERPOINT_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT D.CENTERPOINT_ID, ''AvgShbCovMinusDwfDFC'', case 
when (select count (DESIRED_FUTURE_CONDITION_ID) from OBVM.DESIRED_FUTURE_CONDITION DFC WHERE DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID and DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID) = 0 then null 
when D.SUMMARIZED_VALUE < (select DFC.DFC_LOW from OBVM.DESIRED_FUTURE_CONDITION DFC WHERE DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID and DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID) then -1 
when D.SUMMARIZED_VALUE > (select DFC.DFC_HIGH from OBVM.DESIRED_FUTURE_CONDITION DFC WHERE DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID and DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID) then 1 
else 0 end 
FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS WHERE D.SUMMARIZATION_ID = ''AvgShbCovMinusDwf'' AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID' where summarization_id = 'AvgShbCovMinusDwfDFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.CENTERPOINT_SUMMARY (CENTERPOINT_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT C.CENTERPOINT_ID, ''AvgShbCovMinusIlex'', ROUND(AVG(D.SUMMARIZED_VALUE), 3) FROM OBVM.CENTERPOINT C, OBVM.QUADRAT_SUMMARY D WHERE D.SUMMARIZATION_ID = ''ShbCovMinusIlex'' AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID GROUP BY C.CENTERPOINT_ID' where summarization_id = 'AvgShbCovMinusIlex' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.CENTERPOINT_SUMMARY (CENTERPOINT_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT D.CENTERPOINT_ID, ''AvgShbCovMinusIlexDFC'', case 
when (select count (DESIRED_FUTURE_CONDITION_ID) from OBVM.DESIRED_FUTURE_CONDITION DFC WHERE DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID and DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID) = 0 then null 
when D.SUMMARIZED_VALUE < (select DFC.DFC_LOW from OBVM.DESIRED_FUTURE_CONDITION DFC WHERE DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID and DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID) then -1 
when D.SUMMARIZED_VALUE > (select DFC.DFC_HIGH from OBVM.DESIRED_FUTURE_CONDITION DFC WHERE DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID and DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID) then 1 
else 0 end 
FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS WHERE D.SUMMARIZATION_ID = ''AvgShbCovMinusIlex'' AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID' where summarization_id = 'AvgShbCovMinusIlexDFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.CENTERPOINT_SUMMARY (CENTERPOINT_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT C.CENTERPOINT_ID, ''AvgShrubCov'', ROUND(AVG(AC.ACTUAL_VALUE), 2) FROM OBVM.CENTERPOINT C, OBVM.QUADRAT_DATA D, OBVM.ATTRIBUTE_CLASS AC WHERE D.ATTRIBUTE_ID = ''ShrubCov'' AND D.ATTRIBUTE_VALUE IS NOT NULL AND AC.ATTRIBUTE_ID = D.ATTRIBUTE_ID AND D.ATTRIBUTE_VALUE = AC.DISPLAY_VALUE AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID GROUP BY C.CENTERPOINT_ID' where summarization_id = 'AvgShrubCov' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.CENTERPOINT_SUMMARY (CENTERPOINT_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT D.CENTERPOINT_ID, ''AvgShrubCovDFC'', case 
when (select count (DESIRED_FUTURE_CONDITION_ID) from OBVM.DESIRED_FUTURE_CONDITION DFC WHERE DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID and DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID) = 0 then null 
when D.SUMMARIZED_VALUE < (select DFC.DFC_LOW from OBVM.DESIRED_FUTURE_CONDITION DFC WHERE DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID and DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID) then -1 
when D.SUMMARIZED_VALUE > (select DFC.DFC_HIGH from OBVM.DESIRED_FUTURE_CONDITION DFC WHERE DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID and DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID) then 1 
else 0 end 
FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS WHERE D.SUMMARIZATION_ID = ''AvgShrubCov'' AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID' where summarization_id = 'AvgShrubCovDFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.CENTERPOINT_SUMMARY (CENTERPOINT_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT C.CENTERPOINT_ID, ''AvgTotMidStoryCov'', ROUND(AVG(D.SUMMARIZED_VALUE), 2) FROM OBVM.CENTERPOINT C, OBVM.QUADRAT_SUMMARY D WHERE D.SUMMARIZATION_ID = ''TotMidStoryCov'' AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID GROUP BY C.CENTERPOINT_ID' where summarization_id = 'AvgTotMidStoryCov' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.CENTERPOINT_SUMMARY (CENTERPOINT_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT D.CENTERPOINT_ID, ''AvgTotMidStoryCovDFC'', case 
when (select count (DESIRED_FUTURE_CONDITION_ID) from OBVM.DESIRED_FUTURE_CONDITION DFC WHERE DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID and DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID) = 0 then null 
when D.SUMMARIZED_VALUE < (select DFC.DFC_LOW from OBVM.DESIRED_FUTURE_CONDITION DFC WHERE DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID and DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID) then -1 
when D.SUMMARIZED_VALUE > (select DFC.DFC_HIGH from OBVM.DESIRED_FUTURE_CONDITION DFC WHERE DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID and DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID) then 1 
else 0 end 
FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS WHERE D.SUMMARIZATION_ID = ''AvgTotMidStoryCov'' AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID' where summarization_id = 'AvgTotMidStoryCovDFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.CENTERPOINT_SUMMARY (CENTERPOINT_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT C.CENTERPOINT_ID, ''AvgWeedCov'', ROUND(AVG(AC.ACTUAL_VALUE), 2) FROM OBVM.CENTERPOINT C, OBVM.QUADRAT_DATA D, OBVM.ATTRIBUTE_CLASS AC WHERE D.ATTRIBUTE_ID = ''WeedCov'' AND D.ATTRIBUTE_VALUE IS NOT NULL AND AC.ATTRIBUTE_ID = D.ATTRIBUTE_ID AND D.ATTRIBUTE_VALUE = AC.DISPLAY_VALUE AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID GROUP BY C.CENTERPOINT_ID' where summarization_id = 'AvgWeedCov' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.CENTERPOINT_SUMMARY (CENTERPOINT_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT D.CENTERPOINT_ID, ''AvgWeedCovDFC'', case 
when (select count (DESIRED_FUTURE_CONDITION_ID) from OBVM.DESIRED_FUTURE_CONDITION DFC WHERE DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID and DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID) = 0 then null 
when D.SUMMARIZED_VALUE < (select DFC.DFC_LOW from OBVM.DESIRED_FUTURE_CONDITION DFC WHERE DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID and DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID) then -1 
when D.SUMMARIZED_VALUE > (select DFC.DFC_HIGH from OBVM.DESIRED_FUTURE_CONDITION DFC WHERE DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID and DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID) then 1 
else 0 end 
FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS WHERE D.SUMMARIZATION_ID = ''AvgWeedCov'' AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID' where summarization_id = 'AvgWeedCovDFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.CENTERPOINT_SUMMARY (CENTERPOINT_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT C.CENTERPOINT_ID, ''AvgWiryCov'', ROUND(AVG(AC.ACTUAL_VALUE), 2) FROM OBVM.CENTERPOINT C, OBVM.QUADRAT_DATA D, OBVM.ATTRIBUTE_CLASS AC WHERE D.ATTRIBUTE_ID = ''WiryCov'' AND D.ATTRIBUTE_VALUE IS NOT NULL AND AC.ATTRIBUTE_ID = D.ATTRIBUTE_ID AND D.ATTRIBUTE_VALUE = AC.DISPLAY_VALUE AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID GROUP BY C.CENTERPOINT_ID' where summarization_id = 'AvgWiryCov' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.CENTERPOINT_SUMMARY (CENTERPOINT_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT D.CENTERPOINT_ID, ''AvgWiryCovDFC'', case 
when (select count (DESIRED_FUTURE_CONDITION_ID) from OBVM.DESIRED_FUTURE_CONDITION DFC WHERE DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID and DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID) = 0 then null 
when D.SUMMARIZED_VALUE < (select DFC.DFC_LOW from OBVM.DESIRED_FUTURE_CONDITION DFC WHERE DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID and DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID) then -1 
when D.SUMMARIZED_VALUE > (select DFC.DFC_HIGH from OBVM.DESIRED_FUTURE_CONDITION DFC WHERE DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID and DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID) then 1 
else 0 end 
FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS WHERE D.SUMMARIZATION_ID = ''AvgWiryCov'' AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID' where summarization_id = 'AvgWiryCovDFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.CENTERPOINT_SUMMARY (CENTERPOINT_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT C.CENTERPOINT_ID,  ''BasalPineBA'', D.ATTRIBUTE_VALUE FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_DATA D WHERE D.ATTRIBUTE_ID = ''BasalPine'' AND D.ATTRIBUTE_VALUE IS NOT NULL AND D.ATTRIBUTE_VALUE NOT IN (''-9999'', ''-8888'', ''ZZ'', ''XX'') AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID' where summarization_id = 'BasalPineBA' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.CENTERPOINT_SUMMARY (CENTERPOINT_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT D.CENTERPOINT_ID, ''BasalPineDFC'', case 
when (select count (DESIRED_FUTURE_CONDITION_ID) from OBVM.DESIRED_FUTURE_CONDITION DFC WHERE DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID and DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID) = 0 then null 
when D.SUMMARIZED_VALUE < (select DFC.DFC_LOW from OBVM.DESIRED_FUTURE_CONDITION DFC WHERE DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID and DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID) then -1 
when D.SUMMARIZED_VALUE > (select DFC.DFC_HIGH from OBVM.DESIRED_FUTURE_CONDITION DFC WHERE DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID and DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID) then 1 
else 0 end 
FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS WHERE D.SUMMARIZATION_ID = ''BasalPineBA'' AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID' where summarization_id = 'BasalPineDFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.CENTERPOINT_SUMMARY (CENTERPOINT_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT C.CENTERPOINT_ID, ''CabPalmDensGT4inDBH'', ROUND((Cast(D.ATTRIBUTE_VALUE as decimal) / 0.03804),2) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_DATA D WHERE D.ATTRIBUTE_ID = ''CPDenGT4in'' AND D.ATTRIBUTE_VALUE IS NOT NULL AND D.ATTRIBUTE_VALUE NOT IN (''-9999'', ''-8888'', ''ZZ'', ''XX'') AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID' where summarization_id = 'CabPalmDensGT4inDBH' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.CENTERPOINT_SUMMARY (CENTERPOINT_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT D.CENTERPOINT_ID, ''CabPalmDesnGT4inDBHDFC'', case 
when (select count (DESIRED_FUTURE_CONDITION_ID) from OBVM.DESIRED_FUTURE_CONDITION DFC WHERE DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID and DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID) = 0 then null 
when D.SUMMARIZED_VALUE < (select DFC.DFC_LOW from OBVM.DESIRED_FUTURE_CONDITION DFC WHERE DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID and DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID) then -1 
when D.SUMMARIZED_VALUE > (select DFC.DFC_HIGH from OBVM.DESIRED_FUTURE_CONDITION DFC WHERE DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID and DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID) then 1 
else 0 end 
FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS WHERE D.SUMMARIZATION_ID = ''CabPalmDensGT4inDBH'' AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID' where summarization_id = 'CabPalmDesnGT4inDBHDFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.CENTERPOINT_SUMMARY (CENTERPOINT_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT C.CENTERPOINT_ID, ''CanopyAgeCenterPt'', D.ATTRIBUTE_VALUE FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_DATA D WHERE D.ATTRIBUTE_ID = ''CanopyAge''  AND D.ATTRIBUTE_VALUE IS NOT NULL AND D.ATTRIBUTE_VALUE NOT IN (''-9999'', ''-8888'', ''ZZ'', ''XX'') AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID' where summarization_id = 'CanopyAgeCenterPt' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.MANAGEMENT_UNIT_SUMMARY (PROJECT_GROUP_ID, MANAGEMENT_UNIT_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) 
select T.PROJECT_GROUP_ID, T.MANAGEMENT_UNIT_ID,''PctCanopyAgeMature'', M.MatureCount/T.TotalCount
from
(SELECT P.PROJECT_GROUP_ID, TS.MANAGEMENT_UNIT_ID, ''M'', COUNT(*) MatureCount
FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_DATA D, OBVM.TARGET_STATION TS, OBVM.PROJECT P 
WHERE D.ATTRIBUTE_ID = ''CanopyAge'' 
AND D.ATTRIBUTE_VALUE in (''Older mature'',''Old growth'') 
AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) 
AND D.CENTERPOINT_ID = C.CENTERPOINT_ID 
AND TS.STATION_ID = C.STATION_ID 
AND TS.PROJECT_ID = P.PROJECT_ID 
GROUP BY P.PROJECT_GROUP_ID, TS.MANAGEMENT_UNIT_ID) M,
(SELECT P.PROJECT_GROUP_ID, TS.MANAGEMENT_UNIT_ID, ''T'', COUNT(*) TotalCount
FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_DATA D, OBVM.TARGET_STATION TS, OBVM.PROJECT P 
WHERE D.ATTRIBUTE_ID = ''CanopyAge'' 
AND D.ATTRIBUTE_VALUE IS NOT NULL 
AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) 
AND D.CENTERPOINT_ID = C.CENTERPOINT_ID 
AND TS.STATION_ID = C.STATION_ID 
AND TS.PROJECT_ID = P.PROJECT_ID 
GROUP BY P.PROJECT_GROUP_ID, TS.MANAGEMENT_UNIT_ID) T
where M.PROJECT_GROUP_ID = T.PROJECT_GROUP_ID
and M.MANAGEMENT_UNIT_ID = T.MANAGEMENT_UNIT_ID' where summarization_id = 'CanopyAgeMUSummary' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.CENTERPOINT_SUMMARY (CENTERPOINT_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT C.CENTERPOINT_ID, ''HwdDensityGT6'', SUM(Cast(D.ATTRIBUTE_VALUE as decimal)) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_DATA D WHERE D.ATTRIBUTE_ID = ''HwdDensGT6'' AND D.ATTRIBUTE_VALUE IS NOT NULL AND D.ATTRIBUTE_VALUE NOT IN (''-9999'', ''-8888'', ''ZZ'', ''XX'') AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID GROUP BY C.CENTERPOINT_ID' where summarization_id = 'HwdDensityGT6' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.CENTERPOINT_SUMMARY (CENTERPOINT_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT D.CENTERPOINT_ID, ''HwdDensityGT6DFC'', case 
when (select count (DESIRED_FUTURE_CONDITION_ID) from OBVM.DESIRED_FUTURE_CONDITION DFC WHERE DFC.ATTRIBUTE_ID = D.ATTRIBUTE_ID and DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID) = 0 then null 
when Cast(D.ATTRIBUTE_VALUE as decimal)  < (select DFC.DFC_LOW from OBVM.DESIRED_FUTURE_CONDITION DFC WHERE DFC.ATTRIBUTE_ID = D.ATTRIBUTE_ID and DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID) then -1 
when Cast(D.ATTRIBUTE_VALUE as decimal)  > (select DFC.DFC_HIGH from OBVM.DESIRED_FUTURE_CONDITION DFC WHERE DFC.ATTRIBUTE_ID = D.ATTRIBUTE_ID and DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID) then 1 
else 0 end 
FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_DATA D, OBVM.TARGET_STATION TS WHERE D.ATTRIBUTE_ID = ''HwdDensGT6'' AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND D.ATTRIBUTE_VALUE IS NOT NULL AND D.ATTRIBUTE_VALUE NOT IN (''-9999'', ''-8888'', ''ZZ'', ''XX'')' where summarization_id = 'HwdDensityGT6DFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.CENTERPOINT_SUMMARY (CENTERPOINT_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT C.CENTERPOINT_ID, ''IlexStemDensity'', ROUND((SUM(AC.ACTUAL_VALUE) / 12),2) FROM OBVM.CENTERPOINT C, OBVM.QUADRAT_DATA D, OBVM.ATTRIBUTE_CLASS AC WHERE D.ATTRIBUTE_ID = ''IlexStems'' AND D.ATTRIBUTE_VALUE IS NOT NULL AND AC.ATTRIBUTE_ID = D.ATTRIBUTE_ID AND D.ATTRIBUTE_VALUE = AC.DISPLAY_VALUE AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID GROUP BY C.CENTERPOINT_ID' where summarization_id = 'IlexStemDensity' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.CENTERPOINT_SUMMARY (CENTERPOINT_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT D.CENTERPOINT_ID, ''IlexStemDensityDFC'', case 
when (select count (DESIRED_FUTURE_CONDITION_ID) from OBVM.DESIRED_FUTURE_CONDITION DFC WHERE DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID and DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID) = 0 then null 
when D.SUMMARIZED_VALUE < (select DFC.DFC_LOW from OBVM.DESIRED_FUTURE_CONDITION DFC WHERE DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID and DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID) then -1 
when D.SUMMARIZED_VALUE > (select DFC.DFC_HIGH from OBVM.DESIRED_FUTURE_CONDITION DFC WHERE DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID and DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID) then 1 
else 0 end 
FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS WHERE D.SUMMARIZATION_ID = ''IlexStemDensity'' AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID' where summarization_id = 'IlexStemDensityDFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.CENTERPOINT_SUMMARY (CENTERPOINT_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT C.CENTERPOINT_ID,  ''LLPineBasalArea'', D.ATTRIBUTE_VALUE FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_DATA D WHERE D.ATTRIBUTE_ID = ''LLPineBA'' AND D.ATTRIBUTE_VALUE IS NOT NULL AND D.ATTRIBUTE_VALUE NOT IN (''-9999'', ''-8888'', ''ZZ'', ''XX'') AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID' where summarization_id = 'LLPineBasalArea' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.CENTERPOINT_SUMMARY (CENTERPOINT_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT D.CENTERPOINT_ID, ''LLPineBasalAreaDFC'', case 
when (select count (DESIRED_FUTURE_CONDITION_ID) from OBVM.DESIRED_FUTURE_CONDITION DFC WHERE DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID and DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID) = 0 then null 
when D.SUMMARIZED_VALUE < (select DFC.DFC_LOW from OBVM.DESIRED_FUTURE_CONDITION DFC WHERE DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID and DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID) then -1 
when D.SUMMARIZED_VALUE > (select DFC.DFC_HIGH from OBVM.DESIRED_FUTURE_CONDITION DFC WHERE DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID and DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID) then 1 
else 0 end 
FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS WHERE D.SUMMARIZATION_ID = ''LLPineBasalArea'' AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID' where summarization_id = 'LLPineBasalAreaDFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.CENTERPOINT_SUMMARY (CENTERPOINT_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT C.CENTERPOINT_ID, ''LLPineDensityLT6ft'', ROUND((Cast(D.ATTRIBUTE_VALUE as decimal) / 0.03804),3) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_DATA D WHERE D.ATTRIBUTE_ID = ''LLPDenLT6F'' AND D.ATTRIBUTE_VALUE IS NOT NULL AND D.ATTRIBUTE_VALUE NOT IN (''-9999'', ''-8888'', ''ZZ'', ''XX'') AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID' where summarization_id = 'LLPineDensityLT6ft' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.CENTERPOINT_SUMMARY (CENTERPOINT_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT D.CENTERPOINT_ID, ''LLPineDensityLT6ftDFC'', case 
when (select count (DESIRED_FUTURE_CONDITION_ID) from OBVM.DESIRED_FUTURE_CONDITION DFC WHERE DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID and DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID) = 0 then null 
when D.SUMMARIZED_VALUE < (select DFC.DFC_LOW from OBVM.DESIRED_FUTURE_CONDITION DFC WHERE DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID and DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID) then -1 
when D.SUMMARIZED_VALUE > (select DFC.DFC_HIGH from OBVM.DESIRED_FUTURE_CONDITION DFC WHERE DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID and DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID) then 1 
else 0 end 
FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS WHERE D.SUMMARIZATION_ID = ''LLPineDensityLT6ft'' AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID' where summarization_id = 'LLPineDensityLT6ftDFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.CENTERPOINT_SUMMARY (CENTERPOINT_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT C.CENTERPOINT_ID, ''LLPineRegGT20ft'', ROUND((Cast(D.ATTRIBUTE_VALUE as decimal) / 0.03804),3)  FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_DATA D WHERE D.ATTRIBUTE_ID = ''LLPine_Reg'' AND D.ATTRIBUTE_VALUE IS NOT NULL AND D.ATTRIBUTE_VALUE NOT IN (''-9999'', ''-8888'', ''ZZ'', ''XX'') AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID' where summarization_id = 'LLPineRegGT20ft' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.CENTERPOINT_SUMMARY (CENTERPOINT_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT C.CENTERPOINT_ID, ''LongleafStemDensity'', SUM(Cast(D.ATTRIBUTE_VALUE as decimal)) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_DATA D WHERE D.ATTRIBUTE_ID = ''LLstemDens'' AND D.ATTRIBUTE_VALUE IS NOT NULL AND D.ATTRIBUTE_VALUE NOT IN (''-9999'', ''-8888'', ''ZZ'', ''XX'') AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID GROUP BY C.CENTERPOINT_ID' where summarization_id = 'LongleafStemDensity' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.CENTERPOINT_SUMMARY (CENTERPOINT_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT D.CENTERPOINT_ID, ''LongleafStemDensityDFC'', case 
when (select count (DESIRED_FUTURE_CONDITION_ID) from OBVM.DESIRED_FUTURE_CONDITION DFC WHERE DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID and DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID) = 0 then null 
when D.SUMMARIZED_VALUE < (select DFC.DFC_LOW from OBVM.DESIRED_FUTURE_CONDITION DFC WHERE DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID and DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID) then -1 
when D.SUMMARIZED_VALUE > (select DFC.DFC_HIGH from OBVM.DESIRED_FUTURE_CONDITION DFC WHERE DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID and DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID) then 1 
else 0 end 
FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS WHERE D.SUMMARIZATION_ID = ''LongleafStemDensity'' AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID' where summarization_id = 'LongleafStemDensityDFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.MANAGEMENT_UNIT_SUMMARY (MANAGEMENT_UNIT_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.MANAGEMENT_UNIT_ID, P.PROJECT_GROUP_ID, ''NAvgBareGroundADFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE > DFC.DFC_HIGH THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.MANAGEMENT_UNIT MU, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''AvgBareGround'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID AND TS.COMMUNITY_TYPE_ID = MU.COMMUNITY_TYPE_ID AND TS.MANAGEMENT_UNIT_ID = MU.MANAGEMENT_UNIT_ID AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.MANAGEMENT_UNIT_ID' where summarization_id = 'NAvgBareGroundADFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.MANAGEMENT_UNIT_SUMMARY (MANAGEMENT_UNIT_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.MANAGEMENT_UNIT_ID, P.PROJECT_GROUP_ID, ''NAvgBareGroundBDFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE < DFC.DFC_LOW THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.MANAGEMENT_UNIT MU, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''AvgBareGround'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID AND TS.COMMUNITY_TYPE_ID = MU.COMMUNITY_TYPE_ID AND TS.MANAGEMENT_UNIT_ID = MU.MANAGEMENT_UNIT_ID AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.MANAGEMENT_UNIT_ID' where summarization_id = 'NAvgBareGroundBDFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.MANAGEMENT_UNIT_SUMMARY (MANAGEMENT_UNIT_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.MANAGEMENT_UNIT_ID, P.PROJECT_GROUP_ID, ''NAvgBareGroundWDFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE BETWEEN nvl(DFC.DFC_LOW,-999999) AND nvl(DFC.DFC_HIGH,999999) THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.MANAGEMENT_UNIT MU, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''AvgBareGround'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID AND TS.COMMUNITY_TYPE_ID = MU.COMMUNITY_TYPE_ID AND TS.MANAGEMENT_UNIT_ID = MU.MANAGEMENT_UNIT_ID AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.MANAGEMENT_UNIT_ID' where summarization_id = 'NAvgBareGroundWDFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.MANAGEMENT_UNIT_SUMMARY (MANAGEMENT_UNIT_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.MANAGEMENT_UNIT_ID, P.PROJECT_GROUP_ID, ''NAvgDwarfShrubCovADFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE > DFC.DFC_HIGH THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.MANAGEMENT_UNIT MU, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''AvgDwarfShrubCov'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID AND TS.COMMUNITY_TYPE_ID = MU.COMMUNITY_TYPE_ID AND TS.MANAGEMENT_UNIT_ID = MU.MANAGEMENT_UNIT_ID AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.MANAGEMENT_UNIT_ID' where summarization_id = 'NAvgDwarfShrubCovADFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.MANAGEMENT_UNIT_SUMMARY (MANAGEMENT_UNIT_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.MANAGEMENT_UNIT_ID, P.PROJECT_GROUP_ID, ''NAvgDwarfShrubCovBDFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE < DFC.DFC_LOW THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.MANAGEMENT_UNIT MU, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''AvgDwarfShrubCov'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID AND TS.COMMUNITY_TYPE_ID = MU.COMMUNITY_TYPE_ID AND TS.MANAGEMENT_UNIT_ID = MU.MANAGEMENT_UNIT_ID AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.MANAGEMENT_UNIT_ID' where summarization_id = 'NAvgDwarfShrubCovBDFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.MANAGEMENT_UNIT_SUMMARY (MANAGEMENT_UNIT_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.MANAGEMENT_UNIT_ID, P.PROJECT_GROUP_ID, ''NAvgDwarfShrubCovWDFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE BETWEEN nvl(DFC.DFC_LOW,-999999) AND nvl(DFC.DFC_HIGH,999999) THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.MANAGEMENT_UNIT MU, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''AvgDwarfShrubCov'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID AND TS.COMMUNITY_TYPE_ID = MU.COMMUNITY_TYPE_ID AND TS.MANAGEMENT_UNIT_ID = MU.MANAGEMENT_UNIT_ID AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.MANAGEMENT_UNIT_ID' where summarization_id = 'NAvgDwarfShrubCovWDFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.MANAGEMENT_UNIT_SUMMARY (MANAGEMENT_UNIT_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.MANAGEMENT_UNIT_ID, P.PROJECT_GROUP_ID, ''NAvgExoticCovADFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE > DFC.DFC_HIGH THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.MANAGEMENT_UNIT MU, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''AvgExoticCov'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID AND TS.COMMUNITY_TYPE_ID = MU.COMMUNITY_TYPE_ID AND TS.MANAGEMENT_UNIT_ID = MU.MANAGEMENT_UNIT_ID AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.MANAGEMENT_UNIT_ID' where summarization_id = 'NAvgExoticCovADFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.MANAGEMENT_UNIT_SUMMARY (MANAGEMENT_UNIT_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.MANAGEMENT_UNIT_ID, P.PROJECT_GROUP_ID, ''NAvgExoticCovBDFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE < DFC.DFC_LOW THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.MANAGEMENT_UNIT MU, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''AvgExoticCov'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID AND TS.COMMUNITY_TYPE_ID = MU.COMMUNITY_TYPE_ID AND TS.MANAGEMENT_UNIT_ID = MU.MANAGEMENT_UNIT_ID AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.MANAGEMENT_UNIT_ID' where summarization_id = 'NAvgExoticCovBDFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.MANAGEMENT_UNIT_SUMMARY (MANAGEMENT_UNIT_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.MANAGEMENT_UNIT_ID, P.PROJECT_GROUP_ID, ''NAvgExoticCovWDFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE BETWEEN nvl(DFC.DFC_LOW,-999999) AND nvl(DFC.DFC_HIGH,999999) THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.MANAGEMENT_UNIT MU, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''AvgExoticCov'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID AND TS.COMMUNITY_TYPE_ID = MU.COMMUNITY_TYPE_ID AND TS.MANAGEMENT_UNIT_ID = MU.MANAGEMENT_UNIT_ID AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.MANAGEMENT_UNIT_ID' where summarization_id = 'NAvgExoticCovWDFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.MANAGEMENT_UNIT_SUMMARY (MANAGEMENT_UNIT_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.MANAGEMENT_UNIT_ID, P.PROJECT_GROUP_ID, ''NAvgHerbCovADFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE > DFC.DFC_HIGH THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.MANAGEMENT_UNIT MU, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''AvgHerbCov'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID AND TS.COMMUNITY_TYPE_ID = MU.COMMUNITY_TYPE_ID AND TS.MANAGEMENT_UNIT_ID = MU.MANAGEMENT_UNIT_ID AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.MANAGEMENT_UNIT_ID' where summarization_id = 'NAvgHerbCovADFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.MANAGEMENT_UNIT_SUMMARY (MANAGEMENT_UNIT_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.MANAGEMENT_UNIT_ID, P.PROJECT_GROUP_ID, ''NAvgHerbCovBDFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE < DFC.DFC_LOW THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.MANAGEMENT_UNIT MU, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''AvgHerbCov'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID AND TS.COMMUNITY_TYPE_ID = MU.COMMUNITY_TYPE_ID AND TS.MANAGEMENT_UNIT_ID = MU.MANAGEMENT_UNIT_ID AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.MANAGEMENT_UNIT_ID' where summarization_id = 'NAvgHerbCovBDFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.MANAGEMENT_UNIT_SUMMARY (MANAGEMENT_UNIT_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.MANAGEMENT_UNIT_ID, P.PROJECT_GROUP_ID, ''NAvgHerbCovWDFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE BETWEEN nvl(DFC.DFC_LOW,-999999) AND nvl(DFC.DFC_HIGH,999999) THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.MANAGEMENT_UNIT MU, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''AvgHerbCov'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID AND TS.COMMUNITY_TYPE_ID = MU.COMMUNITY_TYPE_ID AND TS.MANAGEMENT_UNIT_ID = MU.MANAGEMENT_UNIT_ID AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.MANAGEMENT_UNIT_ID' where summarization_id = 'NAvgHerbCovWDFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.MANAGEMENT_UNIT_SUMMARY (MANAGEMENT_UNIT_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.MANAGEMENT_UNIT_ID, P.PROJECT_GROUP_ID, ''NAvgMaxSerHtADFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE > DFC.DFC_HIGH THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.MANAGEMENT_UNIT MU, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''AvgMaxSerHt'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID AND TS.COMMUNITY_TYPE_ID = MU.COMMUNITY_TYPE_ID AND TS.MANAGEMENT_UNIT_ID = MU.MANAGEMENT_UNIT_ID AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.MANAGEMENT_UNIT_ID' where summarization_id = 'NAvgMaxSerHtADFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.MANAGEMENT_UNIT_SUMMARY (MANAGEMENT_UNIT_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.MANAGEMENT_UNIT_ID, P.PROJECT_GROUP_ID, ''NAvgMaxSerHtBDFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE < DFC.DFC_LOW THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.MANAGEMENT_UNIT MU, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''AvgMaxSerHt'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID AND TS.COMMUNITY_TYPE_ID = MU.COMMUNITY_TYPE_ID AND TS.MANAGEMENT_UNIT_ID = MU.MANAGEMENT_UNIT_ID AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.MANAGEMENT_UNIT_ID' where summarization_id = 'NAvgMaxSerHtBDFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.MANAGEMENT_UNIT_SUMMARY (MANAGEMENT_UNIT_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.MANAGEMENT_UNIT_ID, P.PROJECT_GROUP_ID, ''NAvgMaxSerHtWDFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE BETWEEN nvl(DFC.DFC_LOW,-999999) AND nvl(DFC.DFC_HIGH,999999) THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.MANAGEMENT_UNIT MU, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''AvgMaxSerHt'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID AND TS.COMMUNITY_TYPE_ID = MU.COMMUNITY_TYPE_ID AND TS.MANAGEMENT_UNIT_ID = MU.MANAGEMENT_UNIT_ID AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.MANAGEMENT_UNIT_ID' where summarization_id = 'NAvgMaxSerHtWDFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.MANAGEMENT_UNIT_SUMMARY (MANAGEMENT_UNIT_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.MANAGEMENT_UNIT_ID, P.PROJECT_GROUP_ID, ''NAvgMaxShrHtADFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE > DFC.DFC_HIGH THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.MANAGEMENT_UNIT MU, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''AvgMaxShrHt'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID AND TS.COMMUNITY_TYPE_ID = MU.COMMUNITY_TYPE_ID AND TS.MANAGEMENT_UNIT_ID = MU.MANAGEMENT_UNIT_ID AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.MANAGEMENT_UNIT_ID' where summarization_id = 'NAvgMaxShrHtADFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.MANAGEMENT_UNIT_SUMMARY (MANAGEMENT_UNIT_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.MANAGEMENT_UNIT_ID, P.PROJECT_GROUP_ID, ''NAvgMaxShrHtBDFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE < DFC.DFC_LOW THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.MANAGEMENT_UNIT MU, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''AvgMaxShrHt'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID AND TS.COMMUNITY_TYPE_ID = MU.COMMUNITY_TYPE_ID AND TS.MANAGEMENT_UNIT_ID = MU.MANAGEMENT_UNIT_ID AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.MANAGEMENT_UNIT_ID' where summarization_id = 'NAvgMaxShrHtBDFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.MANAGEMENT_UNIT_SUMMARY (MANAGEMENT_UNIT_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.MANAGEMENT_UNIT_ID, P.PROJECT_GROUP_ID, ''NAvgMaxShrHtWDFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE BETWEEN nvl(DFC.DFC_LOW,-999999) AND nvl(DFC.DFC_HIGH,999999) THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.MANAGEMENT_UNIT MU, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''AvgMaxShrHt'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID AND TS.COMMUNITY_TYPE_ID = MU.COMMUNITY_TYPE_ID AND TS.MANAGEMENT_UNIT_ID = MU.MANAGEMENT_UNIT_ID AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.MANAGEMENT_UNIT_ID' where summarization_id = 'NAvgMaxShrHtWDFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.MANAGEMENT_UNIT_SUMMARY (MANAGEMENT_UNIT_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.MANAGEMENT_UNIT_ID, P.PROJECT_GROUP_ID, ''NAvgPANABScovADFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE > DFC.DFC_HIGH THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.MANAGEMENT_UNIT MU, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''AvgPANABScov'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID AND TS.COMMUNITY_TYPE_ID = MU.COMMUNITY_TYPE_ID AND TS.MANAGEMENT_UNIT_ID = MU.MANAGEMENT_UNIT_ID AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.MANAGEMENT_UNIT_ID' where summarization_id = 'NAvgPANABScovADFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.MANAGEMENT_UNIT_SUMMARY (MANAGEMENT_UNIT_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.MANAGEMENT_UNIT_ID, P.PROJECT_GROUP_ID, ''NAvgPANABScovBDFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE < DFC.DFC_LOW THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.MANAGEMENT_UNIT MU, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''AvgPANABScov'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID AND TS.COMMUNITY_TYPE_ID = MU.COMMUNITY_TYPE_ID AND TS.MANAGEMENT_UNIT_ID = MU.MANAGEMENT_UNIT_ID AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.MANAGEMENT_UNIT_ID' where summarization_id = 'NAvgPANABScovBDFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.MANAGEMENT_UNIT_SUMMARY (MANAGEMENT_UNIT_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.MANAGEMENT_UNIT_ID, P.PROJECT_GROUP_ID, ''NAvgPANABScovWDFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE BETWEEN nvl(DFC.DFC_LOW,-999999) AND nvl(DFC.DFC_HIGH,999999) THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.MANAGEMENT_UNIT MU, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''AvgPANABScov'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID AND TS.COMMUNITY_TYPE_ID = MU.COMMUNITY_TYPE_ID AND TS.MANAGEMENT_UNIT_ID = MU.MANAGEMENT_UNIT_ID AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.MANAGEMENT_UNIT_ID' where summarization_id = 'NAvgPANABScovWDFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.MANAGEMENT_UNIT_SUMMARY (MANAGEMENT_UNIT_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.MANAGEMENT_UNIT_ID, P.PROJECT_GROUP_ID, ''NAvgRunnerOakCovADFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE > DFC.DFC_HIGH THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.MANAGEMENT_UNIT MU, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''AvgRunnerOakCov'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID AND TS.COMMUNITY_TYPE_ID = MU.COMMUNITY_TYPE_ID AND TS.MANAGEMENT_UNIT_ID = MU.MANAGEMENT_UNIT_ID AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.MANAGEMENT_UNIT_ID' where summarization_id = 'NAvgRunnerOakCovADFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.MANAGEMENT_UNIT_SUMMARY (MANAGEMENT_UNIT_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.MANAGEMENT_UNIT_ID, P.PROJECT_GROUP_ID, ''NAvgRunnerOakCovBDFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE < DFC.DFC_LOW THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.MANAGEMENT_UNIT MU, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''AvgRunnerOakCov'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID AND TS.COMMUNITY_TYPE_ID = MU.COMMUNITY_TYPE_ID AND TS.MANAGEMENT_UNIT_ID = MU.MANAGEMENT_UNIT_ID AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.MANAGEMENT_UNIT_ID' where summarization_id = 'NAvgRunnerOakCovBDFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.MANAGEMENT_UNIT_SUMMARY (MANAGEMENT_UNIT_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.MANAGEMENT_UNIT_ID, P.PROJECT_GROUP_ID, ''NAvgRunnerOakCovWDFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE BETWEEN nvl(DFC.DFC_LOW,-999999) AND nvl(DFC.DFC_HIGH,999999) THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.MANAGEMENT_UNIT MU, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''AvgRunnerOakCov'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID AND TS.COMMUNITY_TYPE_ID = MU.COMMUNITY_TYPE_ID AND TS.MANAGEMENT_UNIT_ID = MU.MANAGEMENT_UNIT_ID AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.MANAGEMENT_UNIT_ID' where summarization_id = 'NAvgRunnerOakCovWDFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.MANAGEMENT_UNIT_SUMMARY (MANAGEMENT_UNIT_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.MANAGEMENT_UNIT_ID, P.PROJECT_GROUP_ID, ''NAvgSerenoaCovADFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE > DFC.DFC_HIGH THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.MANAGEMENT_UNIT MU, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''AvgSerenoaCov'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID AND TS.COMMUNITY_TYPE_ID = MU.COMMUNITY_TYPE_ID AND TS.MANAGEMENT_UNIT_ID = MU.MANAGEMENT_UNIT_ID AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.MANAGEMENT_UNIT_ID' where summarization_id = 'NAvgSerenoaCovADFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.MANAGEMENT_UNIT_SUMMARY (MANAGEMENT_UNIT_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.MANAGEMENT_UNIT_ID, P.PROJECT_GROUP_ID, ''NAvgSerenoaCovBDFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE < DFC.DFC_LOW THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.MANAGEMENT_UNIT MU, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''AvgSerenoaCov'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID AND TS.COMMUNITY_TYPE_ID = MU.COMMUNITY_TYPE_ID AND TS.MANAGEMENT_UNIT_ID = MU.MANAGEMENT_UNIT_ID AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.MANAGEMENT_UNIT_ID' where summarization_id = 'NAvgSerenoaCovBDFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.MANAGEMENT_UNIT_SUMMARY (MANAGEMENT_UNIT_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.MANAGEMENT_UNIT_ID, P.PROJECT_GROUP_ID, ''NAvgSerenoaCovWDFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE BETWEEN nvl(DFC.DFC_LOW,-999999) AND nvl(DFC.DFC_HIGH,999999) THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.MANAGEMENT_UNIT MU, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''AvgSerenoaCov'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID AND TS.COMMUNITY_TYPE_ID = MU.COMMUNITY_TYPE_ID AND TS.MANAGEMENT_UNIT_ID = MU.MANAGEMENT_UNIT_ID AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.MANAGEMENT_UNIT_ID' where summarization_id = 'NAvgSerenoaCovWDFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.MANAGEMENT_UNIT_SUMMARY (MANAGEMENT_UNIT_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.MANAGEMENT_UNIT_ID, P.PROJECT_GROUP_ID, ''NAvgSerenoaIlexCovADFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE > DFC.DFC_HIGH THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.MANAGEMENT_UNIT MU, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''AvgSerenoaIlexCov'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID AND TS.COMMUNITY_TYPE_ID = MU.COMMUNITY_TYPE_ID AND TS.MANAGEMENT_UNIT_ID = MU.MANAGEMENT_UNIT_ID AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.MANAGEMENT_UNIT_ID' where summarization_id = 'NAvgSerenoaIlexCovADFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.MANAGEMENT_UNIT_SUMMARY (MANAGEMENT_UNIT_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.MANAGEMENT_UNIT_ID, P.PROJECT_GROUP_ID, ''NAvgSerenoaIlexCovBDFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE < DFC.DFC_LOW THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.MANAGEMENT_UNIT MU, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''AvgSerenoaIlexCov'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID AND TS.COMMUNITY_TYPE_ID = MU.COMMUNITY_TYPE_ID AND TS.MANAGEMENT_UNIT_ID = MU.MANAGEMENT_UNIT_ID AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.MANAGEMENT_UNIT_ID' where summarization_id = 'NAvgSerenoaIlexCovBDFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.MANAGEMENT_UNIT_SUMMARY (MANAGEMENT_UNIT_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.MANAGEMENT_UNIT_ID, P.PROJECT_GROUP_ID, ''NAvgSerenoaIlexCovWDFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE BETWEEN nvl(DFC.DFC_LOW,-999999) AND nvl(DFC.DFC_HIGH,999999) THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.MANAGEMENT_UNIT MU, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''AvgSerenoaIlexCov'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID AND TS.COMMUNITY_TYPE_ID = MU.COMMUNITY_TYPE_ID AND TS.MANAGEMENT_UNIT_ID = MU.MANAGEMENT_UNIT_ID AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.MANAGEMENT_UNIT_ID' where summarization_id = 'NAvgSerenoaIlexCovWDFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.MANAGEMENT_UNIT_SUMMARY (MANAGEMENT_UNIT_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.MANAGEMENT_UNIT_ID, P.PROJECT_GROUP_ID, ''NAvgShbCovMinusDwfADFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE > DFC.DFC_HIGH THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.MANAGEMENT_UNIT MU, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''AvgShbCovMinusDwf'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID AND TS.COMMUNITY_TYPE_ID = MU.COMMUNITY_TYPE_ID AND TS.MANAGEMENT_UNIT_ID = MU.MANAGEMENT_UNIT_ID AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.MANAGEMENT_UNIT_ID' where summarization_id = 'NAvgShbCovMinusDwfADFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.MANAGEMENT_UNIT_SUMMARY (MANAGEMENT_UNIT_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.MANAGEMENT_UNIT_ID, P.PROJECT_GROUP_ID, ''NAvgShbCovMinusDwfBDFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE < DFC.DFC_LOW THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.MANAGEMENT_UNIT MU, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''AvgShbCovMinusDwf'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID AND TS.COMMUNITY_TYPE_ID = MU.COMMUNITY_TYPE_ID AND TS.MANAGEMENT_UNIT_ID = MU.MANAGEMENT_UNIT_ID AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.MANAGEMENT_UNIT_ID' where summarization_id = 'NAvgShbCovMinusDwfBDFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.MANAGEMENT_UNIT_SUMMARY (MANAGEMENT_UNIT_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.MANAGEMENT_UNIT_ID, P.PROJECT_GROUP_ID, ''NAvgShbCovMinusDwfWDFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE BETWEEN nvl(DFC.DFC_LOW,-999999) AND nvl(DFC.DFC_HIGH,999999) THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.MANAGEMENT_UNIT MU, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''AvgShbCovMinusDwf'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID AND TS.COMMUNITY_TYPE_ID = MU.COMMUNITY_TYPE_ID AND TS.MANAGEMENT_UNIT_ID = MU.MANAGEMENT_UNIT_ID AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.MANAGEMENT_UNIT_ID' where summarization_id = 'NAvgShbCovMinusDwfWDFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.MANAGEMENT_UNIT_SUMMARY (MANAGEMENT_UNIT_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.MANAGEMENT_UNIT_ID, P.PROJECT_GROUP_ID, ''NAvgShbCovMinusIlexADFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE > DFC.DFC_HIGH THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.MANAGEMENT_UNIT MU, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''AvgShbCovMinusIlex'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID AND TS.COMMUNITY_TYPE_ID = MU.COMMUNITY_TYPE_ID AND TS.MANAGEMENT_UNIT_ID = MU.MANAGEMENT_UNIT_ID AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.MANAGEMENT_UNIT_ID' where summarization_id = 'NAvgShbCovMinusIlexADFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.MANAGEMENT_UNIT_SUMMARY (MANAGEMENT_UNIT_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.MANAGEMENT_UNIT_ID, P.PROJECT_GROUP_ID, ''NAvgShbCovMinusIlexBDFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE < DFC.DFC_LOW THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.MANAGEMENT_UNIT MU, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''AvgShbCovMinusIlex'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID AND TS.COMMUNITY_TYPE_ID = MU.COMMUNITY_TYPE_ID AND TS.MANAGEMENT_UNIT_ID = MU.MANAGEMENT_UNIT_ID AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.MANAGEMENT_UNIT_ID' where summarization_id = 'NAvgShbCovMinusIlexBDFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.MANAGEMENT_UNIT_SUMMARY (MANAGEMENT_UNIT_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.MANAGEMENT_UNIT_ID, P.PROJECT_GROUP_ID, ''NAvgShbCovMinusIlexWDFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE BETWEEN nvl(DFC.DFC_LOW,-999999) AND nvl(DFC.DFC_HIGH,999999) THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.MANAGEMENT_UNIT MU, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''AvgShbCovMinusIlex'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID AND TS.COMMUNITY_TYPE_ID = MU.COMMUNITY_TYPE_ID AND TS.MANAGEMENT_UNIT_ID = MU.MANAGEMENT_UNIT_ID AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.MANAGEMENT_UNIT_ID' where summarization_id = 'NAvgShbCovMinusIlexWDFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.MANAGEMENT_UNIT_SUMMARY (MANAGEMENT_UNIT_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.MANAGEMENT_UNIT_ID, P.PROJECT_GROUP_ID, ''NAvgShrubCovADFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE > DFC.DFC_HIGH THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.MANAGEMENT_UNIT MU, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''AvgShrubCov'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID AND TS.COMMUNITY_TYPE_ID = MU.COMMUNITY_TYPE_ID AND TS.MANAGEMENT_UNIT_ID = MU.MANAGEMENT_UNIT_ID AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.MANAGEMENT_UNIT_ID' where summarization_id = 'NAvgShrubCovADFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.MANAGEMENT_UNIT_SUMMARY (MANAGEMENT_UNIT_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.MANAGEMENT_UNIT_ID, P.PROJECT_GROUP_ID, ''NAvgShrubCovBDFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE < DFC.DFC_LOW THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.MANAGEMENT_UNIT MU, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''AvgShrubCov'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID AND TS.COMMUNITY_TYPE_ID = MU.COMMUNITY_TYPE_ID AND TS.MANAGEMENT_UNIT_ID = MU.MANAGEMENT_UNIT_ID AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.MANAGEMENT_UNIT_ID' where summarization_id = 'NAvgShrubCovBDFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.MANAGEMENT_UNIT_SUMMARY (MANAGEMENT_UNIT_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.MANAGEMENT_UNIT_ID, P.PROJECT_GROUP_ID, ''NAvgShrubCovWDFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE BETWEEN nvl(DFC.DFC_LOW,-999999) AND nvl(DFC.DFC_HIGH,999999) THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.MANAGEMENT_UNIT MU, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''AvgShrubCov'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID AND TS.COMMUNITY_TYPE_ID = MU.COMMUNITY_TYPE_ID AND TS.MANAGEMENT_UNIT_ID = MU.MANAGEMENT_UNIT_ID AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.MANAGEMENT_UNIT_ID' where summarization_id = 'NAvgShrubCovWDFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.MANAGEMENT_UNIT_SUMMARY (MANAGEMENT_UNIT_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.MANAGEMENT_UNIT_ID, P.PROJECT_GROUP_ID, ''NAvgTotMidStoryCovADFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE > DFC.DFC_HIGH THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.MANAGEMENT_UNIT MU, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''AvgTotMidStoryCov'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID AND TS.COMMUNITY_TYPE_ID = MU.COMMUNITY_TYPE_ID AND TS.MANAGEMENT_UNIT_ID = MU.MANAGEMENT_UNIT_ID AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.MANAGEMENT_UNIT_ID' where summarization_id = 'NAvgTotMidStoryCovADFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.MANAGEMENT_UNIT_SUMMARY (MANAGEMENT_UNIT_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.MANAGEMENT_UNIT_ID, P.PROJECT_GROUP_ID, ''NAvgTotMidStoryCovBDFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE < DFC.DFC_LOW THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.MANAGEMENT_UNIT MU, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''AvgTotMidStoryCov'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID AND TS.COMMUNITY_TYPE_ID = MU.COMMUNITY_TYPE_ID AND TS.MANAGEMENT_UNIT_ID = MU.MANAGEMENT_UNIT_ID AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.MANAGEMENT_UNIT_ID' where summarization_id = 'NAvgTotMidStoryCovBDFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.MANAGEMENT_UNIT_SUMMARY (MANAGEMENT_UNIT_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.MANAGEMENT_UNIT_ID, P.PROJECT_GROUP_ID, ''NAvgTotMidStoryCovWDFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE BETWEEN nvl(DFC.DFC_LOW,-999999) AND nvl(DFC.DFC_HIGH,999999) THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.MANAGEMENT_UNIT MU, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''AvgTotMidStoryCov'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID AND TS.COMMUNITY_TYPE_ID = MU.COMMUNITY_TYPE_ID AND TS.MANAGEMENT_UNIT_ID = MU.MANAGEMENT_UNIT_ID AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.MANAGEMENT_UNIT_ID' where summarization_id = 'NAvgTotMidStoryCovWDFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.MANAGEMENT_UNIT_SUMMARY (MANAGEMENT_UNIT_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.MANAGEMENT_UNIT_ID, P.PROJECT_GROUP_ID, ''NAvgWeedCovADFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE > DFC.DFC_HIGH THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.MANAGEMENT_UNIT MU, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''AvgWeedCov'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID AND TS.COMMUNITY_TYPE_ID = MU.COMMUNITY_TYPE_ID AND TS.MANAGEMENT_UNIT_ID = MU.MANAGEMENT_UNIT_ID AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.MANAGEMENT_UNIT_ID' where summarization_id = 'NAvgWeedCovADFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.MANAGEMENT_UNIT_SUMMARY (MANAGEMENT_UNIT_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.MANAGEMENT_UNIT_ID, P.PROJECT_GROUP_ID, ''NAvgWeedCovBDFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE < DFC.DFC_LOW THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.MANAGEMENT_UNIT MU, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''AvgWeedCov'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID AND TS.COMMUNITY_TYPE_ID = MU.COMMUNITY_TYPE_ID AND TS.MANAGEMENT_UNIT_ID = MU.MANAGEMENT_UNIT_ID AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.MANAGEMENT_UNIT_ID' where summarization_id = 'NAvgWeedCovBDFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.MANAGEMENT_UNIT_SUMMARY (MANAGEMENT_UNIT_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.MANAGEMENT_UNIT_ID, P.PROJECT_GROUP_ID, ''NAvgWeedCovWDFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE BETWEEN nvl(DFC.DFC_LOW,-999999) AND nvl(DFC.DFC_HIGH,999999) THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.MANAGEMENT_UNIT MU, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''AvgWeedCov'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID AND TS.COMMUNITY_TYPE_ID = MU.COMMUNITY_TYPE_ID AND TS.MANAGEMENT_UNIT_ID = MU.MANAGEMENT_UNIT_ID AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.MANAGEMENT_UNIT_ID' where summarization_id = 'NAvgWeedCovWDFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.MANAGEMENT_UNIT_SUMMARY (MANAGEMENT_UNIT_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.MANAGEMENT_UNIT_ID, P.PROJECT_GROUP_ID, ''NAvgWiryCovADFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE > DFC.DFC_HIGH THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.MANAGEMENT_UNIT MU, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''AvgWiryCov'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID AND TS.COMMUNITY_TYPE_ID = MU.COMMUNITY_TYPE_ID AND TS.MANAGEMENT_UNIT_ID = MU.MANAGEMENT_UNIT_ID AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.MANAGEMENT_UNIT_ID' where summarization_id = 'NAvgWiryCovADFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.MANAGEMENT_UNIT_SUMMARY (MANAGEMENT_UNIT_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.MANAGEMENT_UNIT_ID, P.PROJECT_GROUP_ID, ''NAvgWiryCovBDFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE < DFC.DFC_LOW THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.MANAGEMENT_UNIT MU, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''AvgWiryCov'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID AND TS.COMMUNITY_TYPE_ID = MU.COMMUNITY_TYPE_ID AND TS.MANAGEMENT_UNIT_ID = MU.MANAGEMENT_UNIT_ID AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.MANAGEMENT_UNIT_ID' where summarization_id = 'NAvgWiryCovBDFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.MANAGEMENT_UNIT_SUMMARY (MANAGEMENT_UNIT_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.MANAGEMENT_UNIT_ID, P.PROJECT_GROUP_ID, ''NAvgWiryCovWDFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE BETWEEN nvl(DFC.DFC_LOW,-999999) AND nvl(DFC.DFC_HIGH,999999) THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.MANAGEMENT_UNIT MU, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''AvgWiryCov'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID AND TS.COMMUNITY_TYPE_ID = MU.COMMUNITY_TYPE_ID AND TS.MANAGEMENT_UNIT_ID = MU.MANAGEMENT_UNIT_ID AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.MANAGEMENT_UNIT_ID' where summarization_id = 'NAvgWiryCovWDFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.MANAGEMENT_UNIT_SUMMARY (MANAGEMENT_UNIT_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.MANAGEMENT_UNIT_ID, P.PROJECT_GROUP_ID, ''NBasalPineADFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE > DFC.DFC_HIGH THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.MANAGEMENT_UNIT MU, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''BasalPineBA'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID AND TS.COMMUNITY_TYPE_ID = MU.COMMUNITY_TYPE_ID AND TS.MANAGEMENT_UNIT_ID = MU.MANAGEMENT_UNIT_ID AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.MANAGEMENT_UNIT_ID' where summarization_id = 'NBasalPineADFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.MANAGEMENT_UNIT_SUMMARY (MANAGEMENT_UNIT_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.MANAGEMENT_UNIT_ID, P.PROJECT_GROUP_ID, ''NBasalPineBDFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE < DFC.DFC_LOW THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.MANAGEMENT_UNIT MU, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''BasalPineBA'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID AND TS.COMMUNITY_TYPE_ID = MU.COMMUNITY_TYPE_ID AND TS.MANAGEMENT_UNIT_ID = MU.MANAGEMENT_UNIT_ID AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.MANAGEMENT_UNIT_ID' where summarization_id = 'NBasalPineBDFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.MANAGEMENT_UNIT_SUMMARY (MANAGEMENT_UNIT_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.MANAGEMENT_UNIT_ID, P.PROJECT_GROUP_ID, ''NBasalPineWDFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE BETWEEN nvl(DFC.DFC_LOW,-999999) AND nvl(DFC.DFC_HIGH,999999) THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.MANAGEMENT_UNIT MU, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''BasalPineBA'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID AND TS.COMMUNITY_TYPE_ID = MU.COMMUNITY_TYPE_ID AND TS.MANAGEMENT_UNIT_ID = MU.MANAGEMENT_UNIT_ID AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.MANAGEMENT_UNIT_ID' where summarization_id = 'NBasalPineWDFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.MANAGEMENT_UNIT_SUMMARY (MANAGEMENT_UNIT_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.MANAGEMENT_UNIT_ID, P.PROJECT_GROUP_ID, ''NCabPalmDesnGT4inDBHADFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE > DFC.DFC_HIGH THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.MANAGEMENT_UNIT MU, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''CabPalmDensGT4inDBH'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID AND TS.COMMUNITY_TYPE_ID = MU.COMMUNITY_TYPE_ID AND TS.MANAGEMENT_UNIT_ID = MU.MANAGEMENT_UNIT_ID AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.MANAGEMENT_UNIT_ID' where summarization_id = 'NCabPalmDesnGT4inDBHADFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.MANAGEMENT_UNIT_SUMMARY (MANAGEMENT_UNIT_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.MANAGEMENT_UNIT_ID, P.PROJECT_GROUP_ID, ''NCabPalmDesnGT4inDBHBDFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE < DFC.DFC_LOW THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.MANAGEMENT_UNIT MU, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''CabPalmDensGT4inDBH'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID AND TS.COMMUNITY_TYPE_ID = MU.COMMUNITY_TYPE_ID AND TS.MANAGEMENT_UNIT_ID = MU.MANAGEMENT_UNIT_ID AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.MANAGEMENT_UNIT_ID' where summarization_id = 'NCabPalmDesnGT4inDBHBDFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.MANAGEMENT_UNIT_SUMMARY (MANAGEMENT_UNIT_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.MANAGEMENT_UNIT_ID, P.PROJECT_GROUP_ID, ''NCabPalmDesnGT4inDBHWDFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE BETWEEN nvl(DFC.DFC_LOW,-999999) AND nvl(DFC.DFC_HIGH,999999) THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.MANAGEMENT_UNIT MU, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''CabPalmDensGT4inDBH'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID AND TS.COMMUNITY_TYPE_ID = MU.COMMUNITY_TYPE_ID AND TS.MANAGEMENT_UNIT_ID = MU.MANAGEMENT_UNIT_ID AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.MANAGEMENT_UNIT_ID' where summarization_id = 'NCabPalmDesnGT4inDBHWDFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.COMMUNITY_SUMMARY (COMMUNITY_TYPE_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.COMMUNITY_TYPE_ID, P.PROJECT_GROUP_ID, ''NCLAvgBareGroundADFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE > DFC.DFC_HIGH THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''AvgBareGround'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.COMMUNITY_TYPE_ID = TS.COMMUNITY_TYPE_ID AND TS.TGT_SAMPLE_LEVEL_CODE = ''Community'' AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.COMMUNITY_TYPE_ID' where summarization_id = 'NCLAvgBareGroundADFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.COMMUNITY_SUMMARY (COMMUNITY_TYPE_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.COMMUNITY_TYPE_ID, P.PROJECT_GROUP_ID, ''NCLAvgBareGroundBDFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE < DFC.DFC_LOW THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''AvgBareGround'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.COMMUNITY_TYPE_ID = TS.COMMUNITY_TYPE_ID AND TS.TGT_SAMPLE_LEVEL_CODE = ''Community'' AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.COMMUNITY_TYPE_ID' where summarization_id = 'NCLAvgBareGroundBDFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.COMMUNITY_SUMMARY (COMMUNITY_TYPE_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.COMMUNITY_TYPE_ID, P.PROJECT_GROUP_ID, ''NCLAvgBareGroundWDFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE BETWEEN nvl(DFC.DFC_LOW,-999999) AND nvl(DFC.DFC_HIGH,999999) THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''AvgBareGround'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.COMMUNITY_TYPE_ID = TS.COMMUNITY_TYPE_ID AND TS.TGT_SAMPLE_LEVEL_CODE = ''Community'' AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.COMMUNITY_TYPE_ID' where summarization_id = 'NCLAvgBareGroundWDFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.COMMUNITY_SUMMARY (COMMUNITY_TYPE_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.COMMUNITY_TYPE_ID, P.PROJECT_GROUP_ID, ''NCLAvgDwarfShrubCovADFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE > DFC.DFC_HIGH THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''AvgDwarfShrubCov'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.COMMUNITY_TYPE_ID = TS.COMMUNITY_TYPE_ID AND TS.TGT_SAMPLE_LEVEL_CODE = ''Community'' AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.COMMUNITY_TYPE_ID' where summarization_id = 'NCLAvgDwarfShrubCovADFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.COMMUNITY_SUMMARY (COMMUNITY_TYPE_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.COMMUNITY_TYPE_ID, P.PROJECT_GROUP_ID, ''NCLAvgDwarfShrubCovBDFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE < DFC.DFC_LOW THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''AvgDwarfShrubCov'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.COMMUNITY_TYPE_ID = TS.COMMUNITY_TYPE_ID AND TS.TGT_SAMPLE_LEVEL_CODE = ''Community'' AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.COMMUNITY_TYPE_ID' where summarization_id = 'NCLAvgDwarfShrubCovBDFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.COMMUNITY_SUMMARY (COMMUNITY_TYPE_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.COMMUNITY_TYPE_ID, P.PROJECT_GROUP_ID, ''NCLAvgDwarfShrubCovWDFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE BETWEEN nvl(DFC.DFC_LOW,-999999) AND nvl(DFC.DFC_HIGH,999999) THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''AvgDwarfShrubCov'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.COMMUNITY_TYPE_ID = TS.COMMUNITY_TYPE_ID AND TS.TGT_SAMPLE_LEVEL_CODE = ''Community'' AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.COMMUNITY_TYPE_ID' where summarization_id = 'NCLAvgDwarfShrubCovWDFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.COMMUNITY_SUMMARY (COMMUNITY_TYPE_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.COMMUNITY_TYPE_ID, P.PROJECT_GROUP_ID, ''NCLAvgExoticCovADFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE > DFC.DFC_HIGH THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''AvgExoticCov'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.COMMUNITY_TYPE_ID = TS.COMMUNITY_TYPE_ID AND TS.TGT_SAMPLE_LEVEL_CODE = ''Community'' AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.COMMUNITY_TYPE_ID' where summarization_id = 'NCLAvgExoticCovADFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.COMMUNITY_SUMMARY (COMMUNITY_TYPE_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.COMMUNITY_TYPE_ID, P.PROJECT_GROUP_ID, ''NCLAvgExoticCovBDFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE < DFC.DFC_LOW THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''AvgExoticCov'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.COMMUNITY_TYPE_ID = TS.COMMUNITY_TYPE_ID AND TS.TGT_SAMPLE_LEVEL_CODE = ''Community'' AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.COMMUNITY_TYPE_ID' where summarization_id = 'NCLAvgExoticCovBDFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.COMMUNITY_SUMMARY (COMMUNITY_TYPE_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.COMMUNITY_TYPE_ID, P.PROJECT_GROUP_ID, ''NCLAvgExoticCovWDFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE BETWEEN nvl(DFC.DFC_LOW,-999999) AND nvl(DFC.DFC_HIGH,999999) THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''AvgExoticCov'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.COMMUNITY_TYPE_ID = TS.COMMUNITY_TYPE_ID AND TS.TGT_SAMPLE_LEVEL_CODE = ''Community'' AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.COMMUNITY_TYPE_ID' where summarization_id = 'NCLAvgExoticCovWDFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.COMMUNITY_SUMMARY (COMMUNITY_TYPE_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.COMMUNITY_TYPE_ID, P.PROJECT_GROUP_ID, ''NCLAvgHerbCovADFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE > DFC.DFC_HIGH THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''AvgHerbCov'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.COMMUNITY_TYPE_ID = TS.COMMUNITY_TYPE_ID AND TS.TGT_SAMPLE_LEVEL_CODE = ''Community'' AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.COMMUNITY_TYPE_ID' where summarization_id = 'NCLAvgHerbCovADFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.COMMUNITY_SUMMARY (COMMUNITY_TYPE_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.COMMUNITY_TYPE_ID, P.PROJECT_GROUP_ID, ''NCLAvgHerbCovBDFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE < DFC.DFC_LOW THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''AvgHerbCov'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.COMMUNITY_TYPE_ID = TS.COMMUNITY_TYPE_ID AND TS.TGT_SAMPLE_LEVEL_CODE = ''Community'' AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.COMMUNITY_TYPE_ID' where summarization_id = 'NCLAvgHerbCovBDFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.COMMUNITY_SUMMARY (COMMUNITY_TYPE_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.COMMUNITY_TYPE_ID, P.PROJECT_GROUP_ID, ''NCLAvgHerbCovWDFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE BETWEEN nvl(DFC.DFC_LOW,-999999) AND nvl(DFC.DFC_HIGH,999999) THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''AvgHerbCov'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.COMMUNITY_TYPE_ID = TS.COMMUNITY_TYPE_ID AND TS.TGT_SAMPLE_LEVEL_CODE = ''Community'' AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.COMMUNITY_TYPE_ID' where summarization_id = 'NCLAvgHerbCovWDFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.COMMUNITY_SUMMARY (COMMUNITY_TYPE_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.COMMUNITY_TYPE_ID, P.PROJECT_GROUP_ID, ''NCLAvgMaxSerHtADFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE > DFC.DFC_HIGH THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''AvgMaxSerHt'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.COMMUNITY_TYPE_ID = TS.COMMUNITY_TYPE_ID AND TS.TGT_SAMPLE_LEVEL_CODE = ''Community'' AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.COMMUNITY_TYPE_ID' where summarization_id = 'NCLAvgMaxSerHtADFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.COMMUNITY_SUMMARY (COMMUNITY_TYPE_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.COMMUNITY_TYPE_ID, P.PROJECT_GROUP_ID, ''NCLAvgMaxSerHtBDFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE < DFC.DFC_LOW THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''AvgMaxSerHt'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.COMMUNITY_TYPE_ID = TS.COMMUNITY_TYPE_ID AND TS.TGT_SAMPLE_LEVEL_CODE = ''Community'' AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.COMMUNITY_TYPE_ID' where summarization_id = 'NCLAvgMaxSerHtBDFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.COMMUNITY_SUMMARY (COMMUNITY_TYPE_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.COMMUNITY_TYPE_ID, P.PROJECT_GROUP_ID, ''NCLAvgMaxSerHtWDFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE BETWEEN nvl(DFC.DFC_LOW,-999999) AND nvl(DFC.DFC_HIGH,999999) THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''AvgMaxSerHt'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.COMMUNITY_TYPE_ID = TS.COMMUNITY_TYPE_ID AND TS.TGT_SAMPLE_LEVEL_CODE = ''Community'' AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.COMMUNITY_TYPE_ID' where summarization_id = 'NCLAvgMaxSerHtWDFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.COMMUNITY_SUMMARY (COMMUNITY_TYPE_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.COMMUNITY_TYPE_ID, P.PROJECT_GROUP_ID, ''NCLAvgMaxShrHtADFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE > DFC.DFC_HIGH THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''AvgMaxShrHt'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.COMMUNITY_TYPE_ID = TS.COMMUNITY_TYPE_ID AND TS.TGT_SAMPLE_LEVEL_CODE = ''Community'' AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.COMMUNITY_TYPE_ID' where summarization_id = 'NCLAvgMaxShrHtADFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.COMMUNITY_SUMMARY (COMMUNITY_TYPE_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.COMMUNITY_TYPE_ID, P.PROJECT_GROUP_ID, ''NCLAvgMaxShrHtBDFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE < DFC.DFC_LOW THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''AvgMaxShrHt'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.COMMUNITY_TYPE_ID = TS.COMMUNITY_TYPE_ID AND TS.TGT_SAMPLE_LEVEL_CODE = ''Community'' AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.COMMUNITY_TYPE_ID' where summarization_id = 'NCLAvgMaxShrHtBDFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.COMMUNITY_SUMMARY (COMMUNITY_TYPE_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.COMMUNITY_TYPE_ID, P.PROJECT_GROUP_ID, ''NCLAvgMaxShrHtWDFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE BETWEEN nvl(DFC.DFC_LOW,-999999) AND nvl(DFC.DFC_HIGH,999999) THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''AvgMaxShrHt'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.COMMUNITY_TYPE_ID = TS.COMMUNITY_TYPE_ID AND TS.TGT_SAMPLE_LEVEL_CODE = ''Community'' AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.COMMUNITY_TYPE_ID' where summarization_id = 'NCLAvgMaxShrHtWDFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.COMMUNITY_SUMMARY (COMMUNITY_TYPE_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.COMMUNITY_TYPE_ID, P.PROJECT_GROUP_ID, ''NCLAvgPANABScovADFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE > DFC.DFC_HIGH THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''AvgPANABScovDFC'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.COMMUNITY_TYPE_ID = TS.COMMUNITY_TYPE_ID AND TS.TGT_SAMPLE_LEVEL_CODE = ''Community'' AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.COMMUNITY_TYPE_ID' where summarization_id = 'NCLAvgPANABScovADFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.COMMUNITY_SUMMARY (COMMUNITY_TYPE_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.COMMUNITY_TYPE_ID, P.PROJECT_GROUP_ID, ''NCLAvgPANABScovBDFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE < DFC.DFC_LOW THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''AvgPANABScovDFC'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.COMMUNITY_TYPE_ID = TS.COMMUNITY_TYPE_ID AND TS.TGT_SAMPLE_LEVEL_CODE = ''Community'' AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.COMMUNITY_TYPE_ID' where summarization_id = 'NCLAvgPANABScovBDFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.COMMUNITY_SUMMARY (COMMUNITY_TYPE_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.COMMUNITY_TYPE_ID, P.PROJECT_GROUP_ID, ''NCLAvgPANABScovWDFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE BETWEEN nvl(DFC.DFC_LOW,-999999) AND nvl(DFC.DFC_HIGH,999999) THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''AvgPANABScovDFC'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.COMMUNITY_TYPE_ID = TS.COMMUNITY_TYPE_ID AND TS.TGT_SAMPLE_LEVEL_CODE = ''Community'' AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.COMMUNITY_TYPE_ID' where summarization_id = 'NCLAvgPANABScovWDFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.COMMUNITY_SUMMARY (COMMUNITY_TYPE_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.COMMUNITY_TYPE_ID, P.PROJECT_GROUP_ID, ''NCLAvgRunnerOakCovADFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE > DFC.DFC_HIGH THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''AvgRunnerOakCovDFC'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.COMMUNITY_TYPE_ID = TS.COMMUNITY_TYPE_ID AND TS.TGT_SAMPLE_LEVEL_CODE = ''Community'' AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.COMMUNITY_TYPE_ID' where summarization_id = 'NCLAvgRunnerOakCovADFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.COMMUNITY_SUMMARY (COMMUNITY_TYPE_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.COMMUNITY_TYPE_ID, P.PROJECT_GROUP_ID, ''NCLAvgRunnerOakCovBDFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE < DFC.DFC_LOW THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''AvgRunnerOakCovDFC'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.COMMUNITY_TYPE_ID = TS.COMMUNITY_TYPE_ID AND TS.TGT_SAMPLE_LEVEL_CODE = ''Community'' AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.COMMUNITY_TYPE_ID' where summarization_id = 'NCLAvgRunnerOakCovBDFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.COMMUNITY_SUMMARY (COMMUNITY_TYPE_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.COMMUNITY_TYPE_ID, P.PROJECT_GROUP_ID, ''NCLAvgRunnerOakCovWDFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE BETWEEN nvl(DFC.DFC_LOW,-999999) AND nvl(DFC.DFC_HIGH,999999) THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''AvgRunnerOakCovDFC'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.COMMUNITY_TYPE_ID = TS.COMMUNITY_TYPE_ID AND TS.TGT_SAMPLE_LEVEL_CODE = ''Community'' AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.COMMUNITY_TYPE_ID' where summarization_id = 'NCLAvgRunnerOakCovWDFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.COMMUNITY_SUMMARY (COMMUNITY_TYPE_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.COMMUNITY_TYPE_ID, P.PROJECT_GROUP_ID, ''NCLAvgSerenoaCovADFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE > DFC.DFC_HIGH THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''AvgSerenoaCov'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.COMMUNITY_TYPE_ID = TS.COMMUNITY_TYPE_ID AND TS.TGT_SAMPLE_LEVEL_CODE = ''Community'' AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.COMMUNITY_TYPE_ID' where summarization_id = 'NCLAvgSerenoaCovADFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.COMMUNITY_SUMMARY (COMMUNITY_TYPE_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.COMMUNITY_TYPE_ID, P.PROJECT_GROUP_ID, ''NCLAvgSerenoaCovBDFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE < DFC.DFC_LOW THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''AvgSerenoaCov'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.COMMUNITY_TYPE_ID = TS.COMMUNITY_TYPE_ID AND TS.TGT_SAMPLE_LEVEL_CODE = ''Community'' AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.COMMUNITY_TYPE_ID' where summarization_id = 'NCLAvgSerenoaCovBDFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.COMMUNITY_SUMMARY (COMMUNITY_TYPE_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.COMMUNITY_TYPE_ID, P.PROJECT_GROUP_ID, ''NCLAvgSerenoaCovWDFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE BETWEEN nvl(DFC.DFC_LOW,-999999) AND nvl(DFC.DFC_HIGH,999999) THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''AvgSerenoaCov'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.COMMUNITY_TYPE_ID = TS.COMMUNITY_TYPE_ID AND TS.TGT_SAMPLE_LEVEL_CODE = ''Community'' AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.COMMUNITY_TYPE_ID' where summarization_id = 'NCLAvgSerenoaCovWDFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.COMMUNITY_SUMMARY (COMMUNITY_TYPE_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.COMMUNITY_TYPE_ID, P.PROJECT_GROUP_ID, ''NCLAvgShbCovMinusDwfADFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE > DFC.DFC_HIGH THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''AvgShbCovMinusDwf'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.COMMUNITY_TYPE_ID = TS.COMMUNITY_TYPE_ID AND TS.TGT_SAMPLE_LEVEL_CODE = ''Community'' AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.COMMUNITY_TYPE_ID' where summarization_id = 'NCLAvgShbCovMinusDwfADFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.COMMUNITY_SUMMARY (COMMUNITY_TYPE_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.COMMUNITY_TYPE_ID, P.PROJECT_GROUP_ID, ''NCLAvgShbCovMinusDwfBDFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE < DFC.DFC_LOW THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''AvgShbCovMinusDwf'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.COMMUNITY_TYPE_ID = TS.COMMUNITY_TYPE_ID AND TS.TGT_SAMPLE_LEVEL_CODE = ''Community'' AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.COMMUNITY_TYPE_ID' where summarization_id = 'NCLAvgShbCovMinusDwfBDFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.COMMUNITY_SUMMARY (COMMUNITY_TYPE_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.COMMUNITY_TYPE_ID, P.PROJECT_GROUP_ID, ''NCLAvgShbCovMinusDwfWDFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE BETWEEN nvl(DFC.DFC_LOW,-999999) AND nvl(DFC.DFC_HIGH,999999) THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''AvgShbCovMinusDwf'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.COMMUNITY_TYPE_ID = TS.COMMUNITY_TYPE_ID AND TS.TGT_SAMPLE_LEVEL_CODE = ''Community'' AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.COMMUNITY_TYPE_ID' where summarization_id = 'NCLAvgShbCovMinusDwfWDFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.COMMUNITY_SUMMARY (COMMUNITY_TYPE_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.COMMUNITY_TYPE_ID, P.PROJECT_GROUP_ID, ''NCLAvgShrubCovADFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE > DFC.DFC_HIGH THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''AvgShrubCov'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.COMMUNITY_TYPE_ID = TS.COMMUNITY_TYPE_ID AND TS.TGT_SAMPLE_LEVEL_CODE = ''Community'' AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.COMMUNITY_TYPE_ID' where summarization_id = 'NCLAvgShrubCovADFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.COMMUNITY_SUMMARY (COMMUNITY_TYPE_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.COMMUNITY_TYPE_ID, P.PROJECT_GROUP_ID, ''NCLAvgShrubCovBDFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE < DFC.DFC_LOW THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''AvgShrubCov'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.COMMUNITY_TYPE_ID = TS.COMMUNITY_TYPE_ID AND TS.TGT_SAMPLE_LEVEL_CODE = ''Community'' AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.COMMUNITY_TYPE_ID' where summarization_id = 'NCLAvgShrubCovBDFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.COMMUNITY_SUMMARY (COMMUNITY_TYPE_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.COMMUNITY_TYPE_ID, P.PROJECT_GROUP_ID, ''NCLAvgShrubCovWDFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE BETWEEN nvl(DFC.DFC_LOW,-999999) AND nvl(DFC.DFC_HIGH,999999) THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''AvgShrubCov'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.COMMUNITY_TYPE_ID = TS.COMMUNITY_TYPE_ID AND TS.TGT_SAMPLE_LEVEL_CODE = ''Community'' AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.COMMUNITY_TYPE_ID' where summarization_id = 'NCLAvgShrubCovWDFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.COMMUNITY_SUMMARY (COMMUNITY_TYPE_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.COMMUNITY_TYPE_ID, P.PROJECT_GROUP_ID, ''NCLAvgTotMidStoryCovADFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE > DFC.DFC_HIGH THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''AvgTotMidStoryCov'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.COMMUNITY_TYPE_ID = TS.COMMUNITY_TYPE_ID AND TS.TGT_SAMPLE_LEVEL_CODE = ''Community'' AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.COMMUNITY_TYPE_ID' where summarization_id = 'NCLAvgTotMidStoryCovADFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.COMMUNITY_SUMMARY (COMMUNITY_TYPE_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.COMMUNITY_TYPE_ID, P.PROJECT_GROUP_ID, ''NCLAvgTotMidStoryCovBDFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE < DFC.DFC_LOW THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''AvgTotMidStoryCov'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.COMMUNITY_TYPE_ID = TS.COMMUNITY_TYPE_ID AND TS.TGT_SAMPLE_LEVEL_CODE = ''Community'' AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.COMMUNITY_TYPE_ID' where summarization_id = 'NCLAvgTotMidStoryCovBDFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.COMMUNITY_SUMMARY (COMMUNITY_TYPE_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.COMMUNITY_TYPE_ID, P.PROJECT_GROUP_ID, ''NCLAvgTotMidStoryCovWDFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE BETWEEN nvl(DFC.DFC_LOW,-999999) AND nvl(DFC.DFC_HIGH,999999) THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''AvgTotMidStoryCov'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.COMMUNITY_TYPE_ID = TS.COMMUNITY_TYPE_ID AND TS.TGT_SAMPLE_LEVEL_CODE = ''Community'' AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.COMMUNITY_TYPE_ID' where summarization_id = 'NCLAvgTotMidStoryCovWDFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.COMMUNITY_SUMMARY (COMMUNITY_TYPE_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.COMMUNITY_TYPE_ID, P.PROJECT_GROUP_ID, ''NCLAvgWeedCovADFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE > DFC.DFC_HIGH THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''AvgWeedCov'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.COMMUNITY_TYPE_ID = TS.COMMUNITY_TYPE_ID AND TS.TGT_SAMPLE_LEVEL_CODE = ''Community'' AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.COMMUNITY_TYPE_ID' where summarization_id = 'NCLAvgWeedCovADFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.COMMUNITY_SUMMARY (COMMUNITY_TYPE_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.COMMUNITY_TYPE_ID, P.PROJECT_GROUP_ID, ''NCLAvgWeedCovBDFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE < DFC.DFC_LOW THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''AvgWeedCov'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.COMMUNITY_TYPE_ID = TS.COMMUNITY_TYPE_ID AND TS.TGT_SAMPLE_LEVEL_CODE = ''Community'' AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.COMMUNITY_TYPE_ID' where summarization_id = 'NCLAvgWeedCovBDFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.COMMUNITY_SUMMARY (COMMUNITY_TYPE_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.COMMUNITY_TYPE_ID, P.PROJECT_GROUP_ID, ''NCLAvgWeedCovWDFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE BETWEEN nvl(DFC.DFC_LOW,-999999) AND nvl(DFC.DFC_HIGH,999999) THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''AvgWeedCov'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.COMMUNITY_TYPE_ID = TS.COMMUNITY_TYPE_ID AND TS.TGT_SAMPLE_LEVEL_CODE = ''Community'' AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.COMMUNITY_TYPE_ID' where summarization_id = 'NCLAvgWeedCovWDFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.COMMUNITY_SUMMARY (COMMUNITY_TYPE_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.COMMUNITY_TYPE_ID, P.PROJECT_GROUP_ID, ''NCLAvgWiryCovADFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE > DFC.DFC_HIGH THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''AvgWiryCov'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.COMMUNITY_TYPE_ID = TS.COMMUNITY_TYPE_ID AND TS.TGT_SAMPLE_LEVEL_CODE = ''Community'' AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.COMMUNITY_TYPE_ID' where summarization_id = 'NCLAvgWiryCovADFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.COMMUNITY_SUMMARY (COMMUNITY_TYPE_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.COMMUNITY_TYPE_ID, P.PROJECT_GROUP_ID, ''NCLAvgWiryCovBDFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE < DFC.DFC_LOW THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''AvgWiryCov'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.COMMUNITY_TYPE_ID = TS.COMMUNITY_TYPE_ID AND TS.TGT_SAMPLE_LEVEL_CODE = ''Community'' AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.COMMUNITY_TYPE_ID' where summarization_id = 'NCLAvgWiryCovBDFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.COMMUNITY_SUMMARY (COMMUNITY_TYPE_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.COMMUNITY_TYPE_ID, P.PROJECT_GROUP_ID, ''NCLAvgWiryCovWDFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE BETWEEN nvl(DFC.DFC_LOW,-999999) AND nvl(DFC.DFC_HIGH,999999) THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''AvgWiryCov'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.COMMUNITY_TYPE_ID = TS.COMMUNITY_TYPE_ID AND TS.TGT_SAMPLE_LEVEL_CODE = ''Community'' AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.COMMUNITY_TYPE_ID' where summarization_id = 'NCLAvgWiryCovWDFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.COMMUNITY_SUMMARY (COMMUNITY_TYPE_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.COMMUNITY_TYPE_ID, P.PROJECT_GROUP_ID, ''NCLBasalPineADFC'', SUM(CASE WHEN Cast(D.ATTRIBUTE_VALUE as decimal) > DFC.DFC_HIGH THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_DATA D, OBVM.TARGET_STATION TS, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.ATTRIBUTE_ID = ''BasalPine'' AND D.ATTRIBUTE_VALUE IS NOT NULL AND D.ATTRIBUTE_VALUE NOT IN (''-9999'', ''-8888'', ''ZZ'', ''XX'') AND DFC.ATTRIBUTE_ID = D.ATTRIBUTE_ID AND DFC.COMMUNITY_TYPE_ID = TS.COMMUNITY_TYPE_ID AND TS.TGT_SAMPLE_LEVEL_CODE = ''Community'' AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.COMMUNITY_TYPE_ID' where summarization_id = 'NCLBasalPineADFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.COMMUNITY_SUMMARY (COMMUNITY_TYPE_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.COMMUNITY_TYPE_ID, P.PROJECT_GROUP_ID, ''NCLBasalPineBDFC'', SUM(CASE WHEN Cast(D.ATTRIBUTE_VALUE as decimal) < DFC.DFC_LOW THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_DATA D, OBVM.TARGET_STATION TS, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.ATTRIBUTE_ID = ''BasalPine'' AND D.ATTRIBUTE_VALUE IS NOT NULL AND D.ATTRIBUTE_VALUE NOT IN (''-9999'', ''-8888'', ''ZZ'', ''XX'') AND DFC.ATTRIBUTE_ID = D.ATTRIBUTE_ID AND DFC.COMMUNITY_TYPE_ID = TS.COMMUNITY_TYPE_ID AND TS.TGT_SAMPLE_LEVEL_CODE = ''Community'' AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.COMMUNITY_TYPE_ID' where summarization_id = 'NCLBasalPineBDFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.COMMUNITY_SUMMARY (COMMUNITY_TYPE_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.COMMUNITY_TYPE_ID, P.PROJECT_GROUP_ID, ''NCLBasalPineWDFC'', SUM(CASE WHEN Cast(D.ATTRIBUTE_VALUE as decimal) BETWEEN nvl(DFC.DFC_LOW,-999999) AND nvl(DFC.DFC_HIGH,999999) THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_DATA D, OBVM.TARGET_STATION TS, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.ATTRIBUTE_ID = ''BasalPine'' AND D.ATTRIBUTE_VALUE IS NOT NULL AND D.ATTRIBUTE_VALUE NOT IN (''-9999'', ''-8888'', ''ZZ'', ''XX'') AND DFC.ATTRIBUTE_ID = D.ATTRIBUTE_ID AND DFC.COMMUNITY_TYPE_ID = TS.COMMUNITY_TYPE_ID AND TS.TGT_SAMPLE_LEVEL_CODE = ''Community'' AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.COMMUNITY_TYPE_ID' where summarization_id = 'NCLBasalPineWDFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.COMMUNITY_SUMMARY (COMMUNITY_TYPE_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.COMMUNITY_TYPE_ID, P.PROJECT_GROUP_ID, ''NCLCabPalmDesnGT4inDBHADFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE > DFC.DFC_HIGH THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''CabPalmDesnGT4inDBHDFC'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.COMMUNITY_TYPE_ID = TS.COMMUNITY_TYPE_ID AND TS.TGT_SAMPLE_LEVEL_CODE = ''Community'' AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.COMMUNITY_TYPE_ID' where summarization_id = 'NCLCabPalmDesnGT4inDBHADFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.COMMUNITY_SUMMARY (COMMUNITY_TYPE_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.COMMUNITY_TYPE_ID, P.PROJECT_GROUP_ID, ''NCLCabPalmDesnGT4inDBHBDFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE < DFC.DFC_LOW THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''CabPalmDesnGT4inDBHDFC'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.COMMUNITY_TYPE_ID = TS.COMMUNITY_TYPE_ID AND TS.TGT_SAMPLE_LEVEL_CODE = ''Community'' AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.COMMUNITY_TYPE_ID' where summarization_id = 'NCLCabPalmDesnGT4inDBHBDFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.COMMUNITY_SUMMARY (COMMUNITY_TYPE_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.COMMUNITY_TYPE_ID, P.PROJECT_GROUP_ID, ''NCLCabPalmDesnGT4inDBHWDFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE BETWEEN nvl(DFC.DFC_LOW,-999999) AND nvl(DFC.DFC_HIGH,999999) THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''CabPalmDesnGT4inDBHDFC'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.COMMUNITY_TYPE_ID = TS.COMMUNITY_TYPE_ID AND TS.TGT_SAMPLE_LEVEL_CODE = ''Community'' AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.COMMUNITY_TYPE_ID' where summarization_id = 'NCLCabPalmDesnGT4inDBHWDFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.COMMUNITY_SUMMARY (COMMUNITY_TYPE_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.COMMUNITY_TYPE_ID, P.PROJECT_GROUP_ID, ''NCLHwdDensityGT6ADFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE > DFC.DFC_HIGH THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''HwdDensityGT6DFC'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.COMMUNITY_TYPE_ID = TS.COMMUNITY_TYPE_ID AND TS.TGT_SAMPLE_LEVEL_CODE = ''Community'' AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.COMMUNITY_TYPE_ID' where summarization_id = 'NCLHwdDensityGT6ADFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.COMMUNITY_SUMMARY (COMMUNITY_TYPE_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.COMMUNITY_TYPE_ID, P.PROJECT_GROUP_ID, ''NCLHwdDensityGT6BDFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE < DFC.DFC_LOW THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''HwdDensityGT6DFC'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.COMMUNITY_TYPE_ID = TS.COMMUNITY_TYPE_ID AND TS.TGT_SAMPLE_LEVEL_CODE = ''Community'' AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.COMMUNITY_TYPE_ID' where summarization_id = 'NCLHwdDensityGT6BDFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.COMMUNITY_SUMMARY (COMMUNITY_TYPE_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.COMMUNITY_TYPE_ID, P.PROJECT_GROUP_ID, ''NCLHwdDensityGT6WDFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE BETWEEN nvl(DFC.DFC_LOW,-999999) AND nvl(DFC.DFC_HIGH,999999) THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''HwdDensityGT6DFC'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.COMMUNITY_TYPE_ID = TS.COMMUNITY_TYPE_ID AND TS.TGT_SAMPLE_LEVEL_CODE = ''Community'' AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.COMMUNITY_TYPE_ID' where summarization_id = 'NCLHwdDensityGT6WDFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.COMMUNITY_SUMMARY (COMMUNITY_TYPE_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.COMMUNITY_TYPE_ID, P.PROJECT_GROUP_ID, ''NCLLLPineBasalAreaADFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE > DFC.DFC_HIGH THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''LLPineBasalAreaDFC'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.COMMUNITY_TYPE_ID = TS.COMMUNITY_TYPE_ID AND TS.TGT_SAMPLE_LEVEL_CODE = ''Community'' AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.COMMUNITY_TYPE_ID' where summarization_id = 'NCLLLPineBasalAreaADFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.COMMUNITY_SUMMARY (COMMUNITY_TYPE_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.COMMUNITY_TYPE_ID, P.PROJECT_GROUP_ID, ''NCLLLPineBasalAreaBDFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE < DFC.DFC_LOW THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''LLPineBasalAreaDFC'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.COMMUNITY_TYPE_ID = TS.COMMUNITY_TYPE_ID AND TS.TGT_SAMPLE_LEVEL_CODE = ''Community'' AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.COMMUNITY_TYPE_ID' where summarization_id = 'NCLLLPineBasalAreaBDFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.COMMUNITY_SUMMARY (COMMUNITY_TYPE_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.COMMUNITY_TYPE_ID, P.PROJECT_GROUP_ID, ''NCLLLPineBasalAreaWDFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE BETWEEN nvl(DFC.DFC_LOW,-999999) AND nvl(DFC.DFC_HIGH,999999) THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''LLPineBasalAreaDFC'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.COMMUNITY_TYPE_ID = TS.COMMUNITY_TYPE_ID AND TS.TGT_SAMPLE_LEVEL_CODE = ''Community'' AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.COMMUNITY_TYPE_ID' where summarization_id = 'NCLLLPineBasalAreaWDFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.COMMUNITY_SUMMARY (PROJECT_GROUP_ID, COMMUNITY_TYPE_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) 
SELECT M.PROJECT_GROUP_ID, M.COMMUNITY_TYPE_ID, ''NCLLLPineRegGT20ft'', 
ROUND((M.LLPineRegen/T.TotalCount)*100)
from
(SELECT P.PROJECT_GROUP_ID, TS.COMMUNITY_TYPE_ID, ''M'', COUNT(*) LLPineRegen
FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_DATA D, OBVM.TARGET_STATION TS, OBVM.PROJECT P 
WHERE D.ATTRIBUTE_ID = ''LLPineRegGT20ft'' 
AND D.ATTRIBUTE_VALUE = ''Yes'' 
AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) 
AND D.CENTERPOINT_ID = C.CENTERPOINT_ID 
AND TS.STATION_ID = C.STATION_ID 
AND TS.PROJECT_ID = P.PROJECT_ID 
GROUP BY P.PROJECT_GROUP_ID,TS.COMMUNITY_TYPE_ID) M,
(SELECT P.PROJECT_GROUP_ID, TS.COMMUNITY_TYPE_ID, ''T'',
COUNT(*) TotalCount
FROM OBVM.CENTERPOINT C, 
OBVM.CENTERPOINT_DATA D, 
OBVM.TARGET_STATION TS, 
OBVM.PROJECT P 
WHERE D.ATTRIBUTE_ID = ''LLPineRegGT20ft'' 
AND D.ATTRIBUTE_VALUE IS NOT NULL 
AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) 
AND D.CENTERPOINT_ID = C.CENTERPOINT_ID 
AND TS.STATION_ID = C.STATION_ID 
AND TS.PROJECT_ID = P.PROJECT_ID
AND TS.TGT_SAMPLE_LEVEL_CODE = ''Community'' 
GROUP BY P.PROJECT_GROUP_ID, TS.COMMUNITY_TYPE_ID) T
where M.PROJECT_GROUP_ID = T.PROJECT_GROUP_ID
and M.COMMUNITY_TYPE_ID = T.COMMUNITY_TYPE_ID' where summarization_id = 'NCLLLPineRegGT20ft' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.COMMUNITY_SUMMARY (COMMUNITY_TYPE_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.COMMUNITY_TYPE_ID, P.PROJECT_GROUP_ID, ''NCLNonLLPineBAADFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE > DFC.DFC_HIGH THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''NonLLPineBADFC'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.COMMUNITY_TYPE_ID = TS.COMMUNITY_TYPE_ID AND TS.TGT_SAMPLE_LEVEL_CODE = ''Community'' AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.COMMUNITY_TYPE_ID' where summarization_id = 'NCLNonLLPineBAADFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.COMMUNITY_SUMMARY (COMMUNITY_TYPE_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.COMMUNITY_TYPE_ID, P.PROJECT_GROUP_ID, ''NCLNonLLPineBABDFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE < DFC.DFC_LOW THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''NonLLPineBADFC'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.COMMUNITY_TYPE_ID = TS.COMMUNITY_TYPE_ID AND TS.TGT_SAMPLE_LEVEL_CODE = ''Community'' AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.COMMUNITY_TYPE_ID' where summarization_id = 'NCLNonLLPineBABDFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.COMMUNITY_SUMMARY (COMMUNITY_TYPE_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.COMMUNITY_TYPE_ID, P.PROJECT_GROUP_ID, ''NCLNonLLPineBAWDFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE BETWEEN nvl(DFC.DFC_LOW,-999999) AND nvl(DFC.DFC_HIGH,999999) THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''NonLLPineBADFC'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.COMMUNITY_TYPE_ID = TS.COMMUNITY_TYPE_ID AND TS.TGT_SAMPLE_LEVEL_CODE = ''Community'' AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.COMMUNITY_TYPE_ID' where summarization_id = 'NCLNonLLPineBAWDFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.COMMUNITY_SUMMARY (COMMUNITY_TYPE_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.COMMUNITY_TYPE_ID, P.PROJECT_GROUP_ID, ''NCLNonPineDensityADFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE > DFC.DFC_HIGH THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''NonPineDensityDFC'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.COMMUNITY_TYPE_ID = TS.COMMUNITY_TYPE_ID AND TS.TGT_SAMPLE_LEVEL_CODE = ''Community'' AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.COMMUNITY_TYPE_ID' where summarization_id = 'NCLNonPineDensityADFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.COMMUNITY_SUMMARY (COMMUNITY_TYPE_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.COMMUNITY_TYPE_ID, P.PROJECT_GROUP_ID, ''NCLNonPineDensityBDFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE < DFC.DFC_LOW THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''NonPineDensityDFC'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.COMMUNITY_TYPE_ID = TS.COMMUNITY_TYPE_ID AND TS.TGT_SAMPLE_LEVEL_CODE = ''Community'' AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.COMMUNITY_TYPE_ID' where summarization_id = 'NCLNonPineDensityBDFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.COMMUNITY_SUMMARY (COMMUNITY_TYPE_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.COMMUNITY_TYPE_ID, P.PROJECT_GROUP_ID, ''NCLNonPineDensityWDFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE BETWEEN nvl(DFC.DFC_LOW,-999999) AND nvl(DFC.DFC_HIGH,999999) THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''NonPineDensityDFC'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.COMMUNITY_TYPE_ID = TS.COMMUNITY_TYPE_ID AND TS.TGT_SAMPLE_LEVEL_CODE = ''Community'' AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.COMMUNITY_TYPE_ID' where summarization_id = 'NCLNonPineDensityWDFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.COMMUNITY_SUMMARY (COMMUNITY_TYPE_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.COMMUNITY_TYPE_ID, P.PROJECT_GROUP_ID, ''NCLOverStoryCoverADFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE > DFC.DFC_HIGH THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''OverStoryCoverDFC'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.COMMUNITY_TYPE_ID = TS.COMMUNITY_TYPE_ID AND TS.TGT_SAMPLE_LEVEL_CODE = ''Community'' AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.COMMUNITY_TYPE_ID' where summarization_id = 'NCLOverStoryCoverADFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.COMMUNITY_SUMMARY (COMMUNITY_TYPE_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.COMMUNITY_TYPE_ID, P.PROJECT_GROUP_ID, ''NCLOverStoryCoverBDFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE < DFC.DFC_LOW THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''OverStoryCoverDFC'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.COMMUNITY_TYPE_ID = TS.COMMUNITY_TYPE_ID AND TS.TGT_SAMPLE_LEVEL_CODE = ''Community'' AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.COMMUNITY_TYPE_ID' where summarization_id = 'NCLOverStoryCoverBDFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.COMMUNITY_SUMMARY (COMMUNITY_TYPE_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.COMMUNITY_TYPE_ID, P.PROJECT_GROUP_ID, ''NCLOverStoryCoverWDFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE BETWEEN nvl(DFC.DFC_LOW,-999999) AND nvl(DFC.DFC_HIGH,999999) THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''OverStoryCoverDFC'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.COMMUNITY_TYPE_ID = TS.COMMUNITY_TYPE_ID AND TS.TGT_SAMPLE_LEVEL_CODE = ''Community'' AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.COMMUNITY_TYPE_ID' where summarization_id = 'NCLOverStoryCoverWDFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.COMMUNITY_SUMMARY (COMMUNITY_TYPE_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.COMMUNITY_TYPE_ID, P.PROJECT_GROUP_ID, ''NCLPineStemDensityADFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE > DFC.DFC_HIGH THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''PineStemDensityDFC'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.COMMUNITY_TYPE_ID = TS.COMMUNITY_TYPE_ID AND TS.TGT_SAMPLE_LEVEL_CODE = ''Community'' AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.COMMUNITY_TYPE_ID' where summarization_id = 'NCLPineStemDensityADFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.COMMUNITY_SUMMARY (COMMUNITY_TYPE_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.COMMUNITY_TYPE_ID, P.PROJECT_GROUP_ID, ''NCLPineStemDensityBDFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE < DFC.DFC_LOW THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''PineStemDensityDFC'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.COMMUNITY_TYPE_ID = TS.COMMUNITY_TYPE_ID AND TS.TGT_SAMPLE_LEVEL_CODE = ''Community'' AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.COMMUNITY_TYPE_ID' where summarization_id = 'NCLPineStemDensityBDFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.COMMUNITY_SUMMARY (COMMUNITY_TYPE_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.COMMUNITY_TYPE_ID, P.PROJECT_GROUP_ID, ''NCLPineStemDensityWDFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE BETWEEN nvl(DFC.DFC_LOW,-999999) AND nvl(DFC.DFC_HIGH,999999) THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''PineStemDensityDFC'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.COMMUNITY_TYPE_ID = TS.COMMUNITY_TYPE_ID AND TS.TGT_SAMPLE_LEVEL_CODE = ''Community'' AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.COMMUNITY_TYPE_ID' where summarization_id = 'NCLPineStemDensityWDFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.COMMUNITY_SUMMARY (COMMUNITY_TYPE_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.COMMUNITY_TYPE_ID, P.PROJECT_GROUP_ID, ''NCLSerenoaPetioleDensityADFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE > DFC.DFC_HIGH THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''SerenoaPetioleDensityDFC'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.COMMUNITY_TYPE_ID = TS.COMMUNITY_TYPE_ID AND TS.TGT_SAMPLE_LEVEL_CODE = ''Community'' AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.COMMUNITY_TYPE_ID' where summarization_id = 'NCLSerenoaPetioleDensityADFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.COMMUNITY_SUMMARY (COMMUNITY_TYPE_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.COMMUNITY_TYPE_ID, P.PROJECT_GROUP_ID, ''NCLSerenoaPetioleDensityBDFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE < DFC.DFC_LOW THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''SerenoaPetioleDensityDFC'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.COMMUNITY_TYPE_ID = TS.COMMUNITY_TYPE_ID AND TS.TGT_SAMPLE_LEVEL_CODE = ''Community'' AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.COMMUNITY_TYPE_ID' where summarization_id = 'NCLSerenoaPetioleDensityBDFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.COMMUNITY_SUMMARY (COMMUNITY_TYPE_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.COMMUNITY_TYPE_ID, P.PROJECT_GROUP_ID, ''NCLSerenoaPetioleDensityWDFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE BETWEEN nvl(DFC.DFC_LOW,-999999) AND nvl(DFC.DFC_HIGH,999999) THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''SerenoaPetioleDensityDFC'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.COMMUNITY_TYPE_ID = TS.COMMUNITY_TYPE_ID AND TS.TGT_SAMPLE_LEVEL_CODE = ''Community'' AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.COMMUNITY_TYPE_ID' where summarization_id = 'NCLSerenoaPetioleDensityWDFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.COMMUNITY_SUMMARY (COMMUNITY_TYPE_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.COMMUNITY_TYPE_ID, P.PROJECT_GROUP_ID, ''NCLShrubStemDensityADFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE > DFC.DFC_HIGH THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''ShrubStemDensityDFC'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.COMMUNITY_TYPE_ID = TS.COMMUNITY_TYPE_ID AND TS.TGT_SAMPLE_LEVEL_CODE = ''Community'' AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.COMMUNITY_TYPE_ID' where summarization_id = 'NCLShrubStemDensityADFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.COMMUNITY_SUMMARY (COMMUNITY_TYPE_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.COMMUNITY_TYPE_ID, P.PROJECT_GROUP_ID, ''NCLShrubStemDensityBDFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE < DFC.DFC_LOW THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''ShrubStemDensityDFC'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.COMMUNITY_TYPE_ID = TS.COMMUNITY_TYPE_ID AND TS.TGT_SAMPLE_LEVEL_CODE = ''Community'' AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.COMMUNITY_TYPE_ID' where summarization_id = 'NCLShrubStemDensityBDFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.COMMUNITY_SUMMARY (COMMUNITY_TYPE_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.COMMUNITY_TYPE_ID, P.PROJECT_GROUP_ID, ''NCLShrubStemDensityWDFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE BETWEEN nvl(DFC.DFC_LOW,-999999) AND nvl(DFC.DFC_HIGH,999999) THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''ShrubStemDensityDFC'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.COMMUNITY_TYPE_ID = TS.COMMUNITY_TYPE_ID AND TS.TGT_SAMPLE_LEVEL_CODE = ''Community'' AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.COMMUNITY_TYPE_ID' where summarization_id = 'NCLShrubStemDensityWDFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.COMMUNITY_SUMMARY (COMMUNITY_TYPE_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.COMMUNITY_TYPE_ID, P.PROJECT_GROUP_ID, ''NCLSndPineDensityADFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE > DFC.DFC_HIGH THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''SndPineDensityDFC'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.COMMUNITY_TYPE_ID = TS.COMMUNITY_TYPE_ID AND TS.TGT_SAMPLE_LEVEL_CODE = ''Community'' AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.COMMUNITY_TYPE_ID' where summarization_id = 'NCLSndPineDensityADFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.COMMUNITY_SUMMARY (COMMUNITY_TYPE_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.COMMUNITY_TYPE_ID, P.PROJECT_GROUP_ID, ''NCLSndPineDensityBDFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE < DFC.DFC_LOW THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''SndPineDensityDFC'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.COMMUNITY_TYPE_ID = TS.COMMUNITY_TYPE_ID AND TS.TGT_SAMPLE_LEVEL_CODE = ''Community'' AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.COMMUNITY_TYPE_ID' where summarization_id = 'NCLSndPineDensityBDFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.COMMUNITY_SUMMARY (COMMUNITY_TYPE_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.COMMUNITY_TYPE_ID, P.PROJECT_GROUP_ID, ''NCLSndPineDensityWDFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE BETWEEN nvl(DFC.DFC_LOW,-999999) AND nvl(DFC.DFC_HIGH,999999) THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''SndPineDensityDFC'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.COMMUNITY_TYPE_ID = TS.COMMUNITY_TYPE_ID AND TS.TGT_SAMPLE_LEVEL_CODE = ''Community'' AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.COMMUNITY_TYPE_ID' where summarization_id = 'NCLSndPineDensityWDFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.COMMUNITY_SUMMARY (PROJECT_GROUP_ID, COMMUNITY_TYPE_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) 
SELECT M.PROJECT_GROUP_ID, M.COMMUNITY_TYPE_ID, ''NCLSndPinPres'', 
ROUND((M.SndPinPres/T.TotalCount)*100)
from
(SELECT P.PROJECT_GROUP_ID, TS.COMMUNITY_TYPE_ID, ''M'', COUNT(*) SndPinPres
FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_DATA D, OBVM.TARGET_STATION TS, OBVM.PROJECT P 
WHERE D.ATTRIBUTE_ID = ''SndPinPres'' 
AND D.ATTRIBUTE_VALUE = ''Yes'' 
AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) 
AND D.CENTERPOINT_ID = C.CENTERPOINT_ID 
AND TS.STATION_ID = C.STATION_ID 
AND TS.PROJECT_ID = P.PROJECT_ID 
GROUP BY P.PROJECT_GROUP_ID,TS.COMMUNITY_TYPE_ID) M,
(SELECT P.PROJECT_GROUP_ID, TS.COMMUNITY_TYPE_ID, ''T'',
COUNT(*) TotalCount
FROM OBVM.CENTERPOINT C, 
OBVM.CENTERPOINT_DATA D, 
OBVM.TARGET_STATION TS, 
OBVM.PROJECT P 
WHERE D.ATTRIBUTE_ID = ''SndPinPrest'' 
AND D.ATTRIBUTE_VALUE IS NOT NULL 
AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) 
AND D.CENTERPOINT_ID = C.CENTERPOINT_ID 
AND TS.STATION_ID = C.STATION_ID 
AND TS.PROJECT_ID = P.PROJECT_ID
AND TS.TGT_SAMPLE_LEVEL_CODE = ''Community'' 
GROUP BY P.PROJECT_GROUP_ID, TS.COMMUNITY_TYPE_ID) T
where M.PROJECT_GROUP_ID = T.PROJECT_GROUP_ID
and M.COMMUNITY_TYPE_ID = T.COMMUNITY_TYPE_ID' where summarization_id = 'NCLSndPinPres' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.COMMUNITY_SUMMARY (COMMUNITY_TYPE_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.COMMUNITY_TYPE_ID, P.PROJECT_GROUP_ID, ''NCLStemDensADFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE > DFC.DFC_HIGH THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''TotalStemDensityDFC'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.COMMUNITY_TYPE_ID = TS.COMMUNITY_TYPE_ID AND TS.TGT_SAMPLE_LEVEL_CODE = ''Community'' AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.COMMUNITY_TYPE_ID' where summarization_id = 'NCLStemDensADFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.COMMUNITY_SUMMARY (COMMUNITY_TYPE_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.COMMUNITY_TYPE_ID, P.PROJECT_GROUP_ID, ''NCLStemDensBDFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE < DFC.DFC_LOW THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''TotalStemDensityDFC'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.COMMUNITY_TYPE_ID = TS.COMMUNITY_TYPE_ID AND TS.TGT_SAMPLE_LEVEL_CODE = ''Community'' AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.COMMUNITY_TYPE_ID' where summarization_id = 'NCLStemDensBDFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.COMMUNITY_SUMMARY (COMMUNITY_TYPE_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.COMMUNITY_TYPE_ID, P.PROJECT_GROUP_ID, ''NCLStemDensWDFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE BETWEEN nvl(DFC.DFC_LOW,-999999) AND nvl(DFC.DFC_HIGH,999999) THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''TotalStemDensityDFC'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.COMMUNITY_TYPE_ID = TS.COMMUNITY_TYPE_ID AND TS.TGT_SAMPLE_LEVEL_CODE = ''Community'' AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.COMMUNITY_TYPE_ID' where summarization_id = 'NCLStemDensWDFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.COMMUNITY_SUMMARY (COMMUNITY_TYPE_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.COMMUNITY_TYPE_ID, P.PROJECT_GROUP_ID, ''NCLSubCanopyADFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE > DFC.DFC_HIGH THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''SubCanopyDFC'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.COMMUNITY_TYPE_ID = TS.COMMUNITY_TYPE_ID AND TS.TGT_SAMPLE_LEVEL_CODE = ''Community'' AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.COMMUNITY_TYPE_ID' where summarization_id = 'NCLSubCanopyADFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.COMMUNITY_SUMMARY (COMMUNITY_TYPE_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.COMMUNITY_TYPE_ID, P.PROJECT_GROUP_ID, ''NCLSubCanopyBDFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE < DFC.DFC_LOW THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''SubCanopyDFC'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.COMMUNITY_TYPE_ID = TS.COMMUNITY_TYPE_ID AND TS.TGT_SAMPLE_LEVEL_CODE = ''Community'' AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.COMMUNITY_TYPE_ID' where summarization_id = 'NCLSubCanopyBDFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.COMMUNITY_SUMMARY (COMMUNITY_TYPE_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.COMMUNITY_TYPE_ID, P.PROJECT_GROUP_ID, ''NCLSubCanopyWDFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE BETWEEN nvl(DFC.DFC_LOW,-999999) AND nvl(DFC.DFC_HIGH,999999) THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''SubCanopyDFC'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.COMMUNITY_TYPE_ID = TS.COMMUNITY_TYPE_ID AND TS.TGT_SAMPLE_LEVEL_CODE = ''Community'' AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.COMMUNITY_TYPE_ID' where summarization_id = 'NCLSubCanopyWDFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.COMMUNITY_SUMMARY (COMMUNITY_TYPE_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.COMMUNITY_TYPE_ID, P.PROJECT_GROUP_ID, ''NCLTotalBasalAreaADFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE > DFC.DFC_HIGH THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''TotalBasalAreaDFC'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.COMMUNITY_TYPE_ID = TS.COMMUNITY_TYPE_ID AND TS.TGT_SAMPLE_LEVEL_CODE = ''Community'' AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.COMMUNITY_TYPE_ID' where summarization_id = 'NCLTotalBasalAreaADFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.COMMUNITY_SUMMARY (COMMUNITY_TYPE_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.COMMUNITY_TYPE_ID, P.PROJECT_GROUP_ID, ''NCLTotalBasalAreaBDFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE < DFC.DFC_LOW THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''TotalBasalAreaDFC'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.COMMUNITY_TYPE_ID = TS.COMMUNITY_TYPE_ID AND TS.TGT_SAMPLE_LEVEL_CODE = ''Community'' AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.COMMUNITY_TYPE_ID' where summarization_id = 'NCLTotalBasalAreaBDFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.COMMUNITY_SUMMARY (COMMUNITY_TYPE_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.COMMUNITY_TYPE_ID, P.PROJECT_GROUP_ID, ''NCLTotalBasalAreaWDFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE BETWEEN nvl(DFC.DFC_LOW,-999999) AND nvl(DFC.DFC_HIGH,999999) THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''TotalBasalAreaDFC'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.COMMUNITY_TYPE_ID = TS.COMMUNITY_TYPE_ID AND TS.TGT_SAMPLE_LEVEL_CODE = ''Community'' AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.COMMUNITY_TYPE_ID' where summarization_id = 'NCLTotalBasalAreaWDFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.MANAGEMENT_UNIT_SUMMARY (MANAGEMENT_UNIT_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.MANAGEMENT_UNIT_ID, P.PROJECT_GROUP_ID, ''NHwdDensityGT6ADFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE > DFC.DFC_HIGH THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.MANAGEMENT_UNIT MU, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''HwdDensityGT6'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID AND TS.COMMUNITY_TYPE_ID = MU.COMMUNITY_TYPE_ID AND TS.MANAGEMENT_UNIT_ID = MU.MANAGEMENT_UNIT_ID AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.MANAGEMENT_UNIT_ID' where summarization_id = 'NHwdDensityGT6ADFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.MANAGEMENT_UNIT_SUMMARY (MANAGEMENT_UNIT_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.MANAGEMENT_UNIT_ID, P.PROJECT_GROUP_ID, ''NHwdDensityGT6BDFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE < DFC.DFC_LOW THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.MANAGEMENT_UNIT MU, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''HwdDensityGT6'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID AND TS.COMMUNITY_TYPE_ID = MU.COMMUNITY_TYPE_ID AND TS.MANAGEMENT_UNIT_ID = MU.MANAGEMENT_UNIT_ID AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.MANAGEMENT_UNIT_ID' where summarization_id = 'NHwdDensityGT6BDFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.MANAGEMENT_UNIT_SUMMARY (MANAGEMENT_UNIT_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.MANAGEMENT_UNIT_ID, P.PROJECT_GROUP_ID, ''NHwdDensityGT6WDFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE BETWEEN nvl(DFC.DFC_LOW,-999999) AND nvl(DFC.DFC_HIGH,999999) THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.MANAGEMENT_UNIT MU, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''HwdDensityGT6'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID AND TS.COMMUNITY_TYPE_ID = MU.COMMUNITY_TYPE_ID AND TS.MANAGEMENT_UNIT_ID = MU.MANAGEMENT_UNIT_ID AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.MANAGEMENT_UNIT_ID' where summarization_id = 'NHwdDensityGT6WDFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.MANAGEMENT_UNIT_SUMMARY (MANAGEMENT_UNIT_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.MANAGEMENT_UNIT_ID, P.PROJECT_GROUP_ID, ''NLLPineBasalAreaADFC'', SUM(CASE WHEN Cast(D.ATTRIBUTE_VALUE as decimal) > DFC.DFC_HIGH THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_DATA D, OBVM.TARGET_STATION TS, OBVM.MANAGEMENT_UNIT MU, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.ATTRIBUTE_ID = ''LLPineBA'' AND D.ATTRIBUTE_VALUE IS NOT NULL AND D.ATTRIBUTE_VALUE NOT IN (''-9999'', ''-8888'', ''ZZ'', ''XX'') AND DFC.ATTRIBUTE_ID = D.ATTRIBUTE_ID AND DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID AND TS.COMMUNITY_TYPE_ID = MU.COMMUNITY_TYPE_ID AND TS.MANAGEMENT_UNIT_ID = MU.MANAGEMENT_UNIT_ID AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.MANAGEMENT_UNIT_ID' where summarization_id = 'NLLPineBasalAreaADFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.MANAGEMENT_UNIT_SUMMARY (MANAGEMENT_UNIT_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.MANAGEMENT_UNIT_ID, P.PROJECT_GROUP_ID, ''NLLPineBasalAreaBDFC'', SUM(CASE WHEN Cast(D.ATTRIBUTE_VALUE as decimal) < DFC.DFC_LOW THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_DATA D, OBVM.TARGET_STATION TS, OBVM.MANAGEMENT_UNIT MU, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.ATTRIBUTE_ID = ''LLPineBA'' AND D.ATTRIBUTE_VALUE IS NOT NULL AND D.ATTRIBUTE_VALUE NOT IN (''-9999'', ''-8888'', ''ZZ'', ''XX'') AND DFC.ATTRIBUTE_ID = D.ATTRIBUTE_ID AND DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID AND TS.COMMUNITY_TYPE_ID = MU.COMMUNITY_TYPE_ID AND TS.MANAGEMENT_UNIT_ID = MU.MANAGEMENT_UNIT_ID AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.MANAGEMENT_UNIT_ID' where summarization_id = 'NLLPineBasalAreaBDFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.MANAGEMENT_UNIT_SUMMARY (MANAGEMENT_UNIT_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.MANAGEMENT_UNIT_ID, P.PROJECT_GROUP_ID, ''NLLPineBasalAreaWDFC'', SUM(CASE WHEN Cast(D.ATTRIBUTE_VALUE as decimal) BETWEEN nvl(DFC.DFC_LOW,-999999) AND nvl(DFC.DFC_HIGH,999999) THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_DATA D, OBVM.TARGET_STATION TS, OBVM.MANAGEMENT_UNIT MU, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.ATTRIBUTE_ID = ''LLPineBA'' AND D.ATTRIBUTE_VALUE IS NOT NULL AND D.ATTRIBUTE_VALUE NOT IN (''-9999'', ''-8888'', ''ZZ'', ''XX'') AND DFC.ATTRIBUTE_ID = D.ATTRIBUTE_ID AND DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID AND TS.COMMUNITY_TYPE_ID = MU.COMMUNITY_TYPE_ID AND TS.MANAGEMENT_UNIT_ID = MU.MANAGEMENT_UNIT_ID AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.MANAGEMENT_UNIT_ID' where summarization_id = 'NLLPineBasalAreaWDFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.MANAGEMENT_UNIT_SUMMARY (MANAGEMENT_UNIT_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.MANAGEMENT_UNIT_ID, P.PROJECT_GROUP_ID, ''NNonLLPineBAADFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE > DFC.DFC_HIGH THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.MANAGEMENT_UNIT MU, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''NonLLPineBA'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID AND TS.COMMUNITY_TYPE_ID = MU.COMMUNITY_TYPE_ID AND TS.MANAGEMENT_UNIT_ID = MU.MANAGEMENT_UNIT_ID AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.MANAGEMENT_UNIT_ID' where summarization_id = 'NNonLLPineBAADFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.MANAGEMENT_UNIT_SUMMARY (MANAGEMENT_UNIT_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.MANAGEMENT_UNIT_ID, P.PROJECT_GROUP_ID, ''NNonLLPineBABDFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE < DFC.DFC_LOW THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.MANAGEMENT_UNIT MU, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''NonLLPineBA'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID AND TS.COMMUNITY_TYPE_ID = MU.COMMUNITY_TYPE_ID AND TS.MANAGEMENT_UNIT_ID = MU.MANAGEMENT_UNIT_ID AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.MANAGEMENT_UNIT_ID' where summarization_id = 'NNonLLPineBABDFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.MANAGEMENT_UNIT_SUMMARY (MANAGEMENT_UNIT_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.MANAGEMENT_UNIT_ID, P.PROJECT_GROUP_ID, ''NNonLLPineBAWDFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE BETWEEN nvl(DFC.DFC_LOW,-999999) AND nvl(DFC.DFC_HIGH,999999) THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.MANAGEMENT_UNIT MU, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''NonLLPineBA'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID AND TS.COMMUNITY_TYPE_ID = MU.COMMUNITY_TYPE_ID AND TS.MANAGEMENT_UNIT_ID = MU.MANAGEMENT_UNIT_ID AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.MANAGEMENT_UNIT_ID' where summarization_id = 'NNonLLPineBAWDFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.MANAGEMENT_UNIT_SUMMARY (MANAGEMENT_UNIT_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.MANAGEMENT_UNIT_ID, P.PROJECT_GROUP_ID, ''NNonPineDensityADFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE > DFC.DFC_HIGH THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.MANAGEMENT_UNIT MU, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''NonPineDensity'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID AND TS.COMMUNITY_TYPE_ID = MU.COMMUNITY_TYPE_ID AND TS.MANAGEMENT_UNIT_ID = MU.MANAGEMENT_UNIT_ID AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.MANAGEMENT_UNIT_ID' where summarization_id = 'NNonPineDensityADFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.MANAGEMENT_UNIT_SUMMARY (MANAGEMENT_UNIT_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.MANAGEMENT_UNIT_ID, P.PROJECT_GROUP_ID, ''NNonPineDensityBDFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE < DFC.DFC_LOW THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.MANAGEMENT_UNIT MU, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''NonPineDensity'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID AND TS.COMMUNITY_TYPE_ID = MU.COMMUNITY_TYPE_ID AND TS.MANAGEMENT_UNIT_ID = MU.MANAGEMENT_UNIT_ID AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.MANAGEMENT_UNIT_ID' where summarization_id = 'NNonPineDensityBDFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.MANAGEMENT_UNIT_SUMMARY (MANAGEMENT_UNIT_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.MANAGEMENT_UNIT_ID, P.PROJECT_GROUP_ID, ''NNonPineDensityWDFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE BETWEEN nvl(DFC.DFC_LOW,-999999) AND nvl(DFC.DFC_HIGH,999999) THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.MANAGEMENT_UNIT MU, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''NonPineDensity'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID AND TS.COMMUNITY_TYPE_ID = MU.COMMUNITY_TYPE_ID AND TS.MANAGEMENT_UNIT_ID = MU.MANAGEMENT_UNIT_ID AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.MANAGEMENT_UNIT_ID' where summarization_id = 'NNonPineDensityWDFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.CENTERPOINT_SUMMARY (CENTERPOINT_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT C.CENTERPOINT_ID, ''NonHEdisonianumStemDensity'', SUM(AC.ACTUAL_VALUE) / 12 FROM OBVM.CENTERPOINT C, OBVM.QUADRAT_DATA D, OBVM.ATTRIBUTE_CLASS AC WHERE D.ATTRIBUTE_ID = ''NonHyEdStm'' AND D.ATTRIBUTE_VALUE IS NOT NULL AND AC.ATTRIBUTE_ID = D.ATTRIBUTE_ID AND D.ATTRIBUTE_VALUE = AC.DISPLAY_VALUE AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID GROUP BY C.CENTERPOINT_ID' where summarization_id = 'NonHEdisonianumStemDensity' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.CENTERPOINT_SUMMARY (CENTERPOINT_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT D.CENTERPOINT_ID, ''NonHEdisonianumStemDensityDFC'', case 
when (select count (DESIRED_FUTURE_CONDITION_ID) from OBVM.DESIRED_FUTURE_CONDITION DFC WHERE DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID and DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID) = 0 then null 
when D.SUMMARIZED_VALUE < (select DFC.DFC_LOW from OBVM.DESIRED_FUTURE_CONDITION DFC WHERE DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID and DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID) then -1 
when D.SUMMARIZED_VALUE > (select DFC.DFC_HIGH from OBVM.DESIRED_FUTURE_CONDITION DFC WHERE DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID and DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID) then 1 
else 0 end 
FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS WHERE D.SUMMARIZATION_ID = ''NonHEdisonianumStemDensity'' AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID' where summarization_id = 'NonHEdisonianumStemDensityDFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.CENTERPOINT_SUMMARY (CENTERPOINT_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) 
SELECT BasalPine.CENTERPOINT_ID, ''NonLLPineBA'', Cast(BasalPine.attribute_value as decimal) - Cast(LLPineBA.attribute_value as decimal) from
         (SELECT C.CENTERPOINT_ID, d.attribute_value
         FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_DATA D 
         WHERE D.ATTRIBUTE_ID = ''BasalPine'' 
         AND D.ATTRIBUTE_VALUE IS NOT NULL 
         AND D.ATTRIBUTE_VALUE NOT IN (''-9999'', ''-8888'', ''ZZ'', ''XX'') 
         AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) 
         AND D.CENTERPOINT_ID = C.CENTERPOINT_ID) BasalPine,
         (SELECT C.CENTERPOINT_ID, d.attribute_value
         FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_DATA D 
         WHERE D.ATTRIBUTE_ID = ''LLPineBA'' 
         AND D.ATTRIBUTE_VALUE IS NOT NULL 
         AND D.ATTRIBUTE_VALUE NOT IN (''-9999'', ''-8888'', ''ZZ'', ''XX'') 
         AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) 
         AND D.CENTERPOINT_ID = C.CENTERPOINT_ID) LLPineBA
Where BasalPine.Centerpoint_ID = LLPineBA.Centerpoint_ID' where summarization_id = 'NonLLPineBA' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.CENTERPOINT_SUMMARY (CENTERPOINT_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT D.CENTERPOINT_ID, ''NonLLPineBADFC'', case 
when (select count (DESIRED_FUTURE_CONDITION_ID) from OBVM.DESIRED_FUTURE_CONDITION DFC WHERE DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID and DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID) = 0 then null 
when D.SUMMARIZED_VALUE < (select DFC.DFC_LOW from OBVM.DESIRED_FUTURE_CONDITION DFC WHERE DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID and DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID) then -1 
when D.SUMMARIZED_VALUE > (select DFC.DFC_HIGH from OBVM.DESIRED_FUTURE_CONDITION DFC WHERE DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID and DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID) then 1 
else 0 end 
FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS WHERE D.SUMMARIZATION_ID = ''NonLLPineBA'' AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID' where summarization_id = 'NonLLPineBADFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.CENTERPOINT_SUMMARY (CENTERPOINT_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT C.CENTERPOINT_ID, ''NonPineDensity'', SUM(Cast(D.ATTRIBUTE_VALUE as decimal)) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_DATA D WHERE D.ATTRIBUTE_ID = ''NonPineDns'' AND D.ATTRIBUTE_VALUE IS NOT NULL AND D.ATTRIBUTE_VALUE NOT IN (''-9999'', ''-8888'', ''ZZ'', ''XX'') AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID GROUP BY C.CENTERPOINT_ID' where summarization_id = 'NonPineDensity' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.CENTERPOINT_SUMMARY (CENTERPOINT_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT D.CENTERPOINT_ID, ''NonPineDensityDFC'', case 
when (select count (DESIRED_FUTURE_CONDITION_ID) from OBVM.DESIRED_FUTURE_CONDITION DFC WHERE DFC.ATTRIBUTE_ID = D.ATTRIBUTE_ID and DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID) = 0 then null 
when Cast(D.ATTRIBUTE_VALUE as decimal)  < (select DFC.DFC_LOW from OBVM.DESIRED_FUTURE_CONDITION DFC WHERE DFC.ATTRIBUTE_ID = D.ATTRIBUTE_ID and DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID) then -1 
when Cast(D.ATTRIBUTE_VALUE as decimal)  > (select DFC.DFC_HIGH from OBVM.DESIRED_FUTURE_CONDITION DFC WHERE DFC.ATTRIBUTE_ID = D.ATTRIBUTE_ID and DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID) then 1 
else 0 end 
FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_DATA D, OBVM.TARGET_STATION TS WHERE D.ATTRIBUTE_ID = ''NonPineDns'' AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND D.ATTRIBUTE_VALUE IS NOT NULL AND D.ATTRIBUTE_VALUE NOT IN (''-9999'', ''-8888'', ''ZZ'', ''XX'')' where summarization_id = 'NonPineDensityDFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.MANAGEMENT_UNIT_SUMMARY (MANAGEMENT_UNIT_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.MANAGEMENT_UNIT_ID, P.PROJECT_GROUP_ID, ''NOverStoryCoverADFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE > DFC.DFC_HIGH THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.MANAGEMENT_UNIT MU, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''OverStoryCover'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID AND TS.COMMUNITY_TYPE_ID = MU.COMMUNITY_TYPE_ID AND TS.MANAGEMENT_UNIT_ID = MU.MANAGEMENT_UNIT_ID AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.MANAGEMENT_UNIT_ID' where summarization_id = 'NOverStoryCoverADFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.MANAGEMENT_UNIT_SUMMARY (MANAGEMENT_UNIT_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.MANAGEMENT_UNIT_ID, P.PROJECT_GROUP_ID, ''NOverStoryCoverBDFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE < DFC.DFC_LOW THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.MANAGEMENT_UNIT MU, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''OverStoryCover'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID AND TS.COMMUNITY_TYPE_ID = MU.COMMUNITY_TYPE_ID AND TS.MANAGEMENT_UNIT_ID = MU.MANAGEMENT_UNIT_ID AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.MANAGEMENT_UNIT_ID' where summarization_id = 'NOverStoryCoverBDFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.MANAGEMENT_UNIT_SUMMARY (MANAGEMENT_UNIT_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.MANAGEMENT_UNIT_ID, P.PROJECT_GROUP_ID, ''NOverStoryCoverWDFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE BETWEEN nvl(DFC.DFC_LOW,-999999) AND nvl(DFC.DFC_HIGH,999999) THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.MANAGEMENT_UNIT MU, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''OverStoryCover'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID AND TS.COMMUNITY_TYPE_ID = MU.COMMUNITY_TYPE_ID AND TS.MANAGEMENT_UNIT_ID = MU.MANAGEMENT_UNIT_ID AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.MANAGEMENT_UNIT_ID' where summarization_id = 'NOverStoryCoverWDFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.MANAGEMENT_UNIT_SUMMARY (PROJECT_GROUP_ID, MANAGEMENT_UNIT_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) 
select T.PROJECT_GROUP_ID, T.MANAGEMENT_UNIT_ID,''PctCanopyAgeMature'', M.MatureCount/T.TotalCount
from
(SELECT P.PROJECT_GROUP_ID, TS.MANAGEMENT_UNIT_ID, ''M'', COUNT(*) MatureCount
FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_DATA D, OBVM.TARGET_STATION TS, OBVM.PROJECT P 
WHERE D.ATTRIBUTE_ID = ''CanopyAge'' 
AND D.ATTRIBUTE_VALUE in (''Older mature'',''Old growth'') 
AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) 
AND D.CENTERPOINT_ID = C.CENTERPOINT_ID 
AND TS.STATION_ID = C.STATION_ID 
AND TS.PROJECT_ID = P.PROJECT_ID 
GROUP BY P.PROJECT_GROUP_ID, TS.MANAGEMENT_UNIT_ID) M,
(SELECT P.PROJECT_GROUP_ID, TS.MANAGEMENT_UNIT_ID, ''T'', COUNT(*) TotalCount
FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_DATA D, OBVM.TARGET_STATION TS, OBVM.PROJECT P 
WHERE D.ATTRIBUTE_ID = ''CanopyAge'' 
AND D.ATTRIBUTE_VALUE IS NOT NULL 
AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) 
AND D.CENTERPOINT_ID = C.CENTERPOINT_ID 
AND TS.STATION_ID = C.STATION_ID 
AND TS.PROJECT_ID = P.PROJECT_ID 
GROUP BY P.PROJECT_GROUP_ID, TS.MANAGEMENT_UNIT_ID) T
where M.PROJECT_GROUP_ID = T.PROJECT_GROUP_ID
and M.MANAGEMENT_UNIT_ID = T.MANAGEMENT_UNIT_ID' where summarization_id = 'NPctCanopyAgeMature' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.CENTERPOINT_SUMMARY (CENTERPOINT_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT C.CENTERPOINT_ID, ''NPDensity6'', SUM(Cast(D.ATTRIBUTE_VALUE as decimal)) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_DATA D WHERE D.ATTRIBUTE_ID = ''NPDens6'' AND D.ATTRIBUTE_VALUE IS NOT NULL AND D.ATTRIBUTE_VALUE NOT IN (''-9999'', ''-8888'', ''ZZ'', ''XX'') AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID GROUP BY C.CENTERPOINT_ID' where summarization_id = 'NPDensity6' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.MANAGEMENT_UNIT_SUMMARY (MANAGEMENT_UNIT_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.MANAGEMENT_UNIT_ID, P.PROJECT_GROUP_ID, ''NPineStemDensityADFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE > DFC.DFC_HIGH THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.MANAGEMENT_UNIT MU, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''PineStemDensity'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID AND TS.COMMUNITY_TYPE_ID = MU.COMMUNITY_TYPE_ID AND TS.MANAGEMENT_UNIT_ID = MU.MANAGEMENT_UNIT_ID AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.MANAGEMENT_UNIT_ID' where summarization_id = 'NPineStemDensityADFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.MANAGEMENT_UNIT_SUMMARY (MANAGEMENT_UNIT_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.MANAGEMENT_UNIT_ID, P.PROJECT_GROUP_ID, ''NPineStemDensityBDFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE < DFC.DFC_LOW THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.MANAGEMENT_UNIT MU, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''PineStemDensity'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID AND TS.COMMUNITY_TYPE_ID = MU.COMMUNITY_TYPE_ID AND TS.MANAGEMENT_UNIT_ID = MU.MANAGEMENT_UNIT_ID AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.MANAGEMENT_UNIT_ID' where summarization_id = 'NPineStemDensityBDFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.MANAGEMENT_UNIT_SUMMARY (MANAGEMENT_UNIT_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.MANAGEMENT_UNIT_ID, P.PROJECT_GROUP_ID, ''NPineStemDensityWDFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE BETWEEN nvl(DFC.DFC_LOW,-999999) AND nvl(DFC.DFC_HIGH,999999) THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.MANAGEMENT_UNIT MU, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''PineStemDensity'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID AND TS.COMMUNITY_TYPE_ID = MU.COMMUNITY_TYPE_ID AND TS.MANAGEMENT_UNIT_ID = MU.MANAGEMENT_UNIT_ID AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.MANAGEMENT_UNIT_ID' where summarization_id = 'NPineStemDensityWDFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.MANAGEMENT_UNIT_SUMMARY (MANAGEMENT_UNIT_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.MANAGEMENT_UNIT_ID, P.PROJECT_GROUP_ID, ''NSerenoaPetioleDensityADFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE > DFC.DFC_HIGH THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.MANAGEMENT_UNIT MU, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''SerenoaPetioleDensityDFC'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID AND TS.COMMUNITY_TYPE_ID = MU.COMMUNITY_TYPE_ID AND TS.MANAGEMENT_UNIT_ID = MU.MANAGEMENT_UNIT_ID AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.MANAGEMENT_UNIT_ID' where summarization_id = 'NSerenoaPetioleDensityADFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.MANAGEMENT_UNIT_SUMMARY (MANAGEMENT_UNIT_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.MANAGEMENT_UNIT_ID, P.PROJECT_GROUP_ID, ''NSerenoaPetioleDensityBDFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE < DFC.DFC_LOW THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.MANAGEMENT_UNIT MU, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''SerenoaPetioleDensity'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID AND TS.COMMUNITY_TYPE_ID = MU.COMMUNITY_TYPE_ID AND TS.MANAGEMENT_UNIT_ID = MU.MANAGEMENT_UNIT_ID AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.MANAGEMENT_UNIT_ID' where summarization_id = 'NSerenoaPetioleDensityBDFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.MANAGEMENT_UNIT_SUMMARY (MANAGEMENT_UNIT_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.MANAGEMENT_UNIT_ID, P.PROJECT_GROUP_ID, ''NSerenoaPetioleDensityWDFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE BETWEEN nvl(DFC.DFC_LOW,-999999) AND nvl(DFC.DFC_HIGH,999999) THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.MANAGEMENT_UNIT MU, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''SerenoaPetioleDensity'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID AND TS.COMMUNITY_TYPE_ID = MU.COMMUNITY_TYPE_ID AND TS.MANAGEMENT_UNIT_ID = MU.MANAGEMENT_UNIT_ID AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.MANAGEMENT_UNIT_ID' where summarization_id = 'NSerenoaPetioleDensityWDFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.MANAGEMENT_UNIT_SUMMARY (MANAGEMENT_UNIT_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.MANAGEMENT_UNIT_ID, P.PROJECT_GROUP_ID, ''NShrubStemDensityADFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE > DFC.DFC_HIGH THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.MANAGEMENT_UNIT MU, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''ShrubStemDensity'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID AND TS.COMMUNITY_TYPE_ID = MU.COMMUNITY_TYPE_ID AND TS.MANAGEMENT_UNIT_ID = MU.MANAGEMENT_UNIT_ID AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.MANAGEMENT_UNIT_ID' where summarization_id = 'NShrubStemDensityADFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.MANAGEMENT_UNIT_SUMMARY (MANAGEMENT_UNIT_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.MANAGEMENT_UNIT_ID, P.PROJECT_GROUP_ID, ''NShrubStemDensityBDFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE < DFC.DFC_LOW THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.MANAGEMENT_UNIT MU, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''ShrubStemDensity'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID AND TS.COMMUNITY_TYPE_ID = MU.COMMUNITY_TYPE_ID AND TS.MANAGEMENT_UNIT_ID = MU.MANAGEMENT_UNIT_ID AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.MANAGEMENT_UNIT_ID' where summarization_id = 'NShrubStemDensityBDFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.MANAGEMENT_UNIT_SUMMARY (MANAGEMENT_UNIT_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.MANAGEMENT_UNIT_ID, P.PROJECT_GROUP_ID, ''NShrubStemDensityWDFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE BETWEEN nvl(DFC.DFC_LOW,-999999) AND nvl(DFC.DFC_HIGH,999999) THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.MANAGEMENT_UNIT MU, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''ShrubStemDensity'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID AND TS.COMMUNITY_TYPE_ID = MU.COMMUNITY_TYPE_ID AND TS.MANAGEMENT_UNIT_ID = MU.MANAGEMENT_UNIT_ID AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.MANAGEMENT_UNIT_ID' where summarization_id = 'NShrubStemDensityWDFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.MANAGEMENT_UNIT_SUMMARY (MANAGEMENT_UNIT_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.MANAGEMENT_UNIT_ID, P.PROJECT_GROUP_ID, ''NSndPineDensityADFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE > DFC.DFC_HIGH THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.MANAGEMENT_UNIT MU, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''SndPineDensity'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID AND TS.COMMUNITY_TYPE_ID = MU.COMMUNITY_TYPE_ID AND TS.MANAGEMENT_UNIT_ID = MU.MANAGEMENT_UNIT_ID AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.MANAGEMENT_UNIT_ID' where summarization_id = 'NSndPineDensityADFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.MANAGEMENT_UNIT_SUMMARY (MANAGEMENT_UNIT_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.MANAGEMENT_UNIT_ID, P.PROJECT_GROUP_ID, ''NSndPineDensityBDFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE < DFC.DFC_LOW THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.MANAGEMENT_UNIT MU, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''SndPineDensity'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID AND TS.COMMUNITY_TYPE_ID = MU.COMMUNITY_TYPE_ID AND TS.MANAGEMENT_UNIT_ID = MU.MANAGEMENT_UNIT_ID AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.MANAGEMENT_UNIT_ID' where summarization_id = 'NSndPineDensityBDFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.MANAGEMENT_UNIT_SUMMARY (MANAGEMENT_UNIT_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.MANAGEMENT_UNIT_ID, P.PROJECT_GROUP_ID, ''NSndPineDensityWDFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE BETWEEN nvl(DFC.DFC_LOW,-999999) AND nvl(DFC.DFC_HIGH,999999) THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.MANAGEMENT_UNIT MU, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''SndPineDensity'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID AND TS.COMMUNITY_TYPE_ID = MU.COMMUNITY_TYPE_ID AND TS.MANAGEMENT_UNIT_ID = MU.MANAGEMENT_UNIT_ID AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.MANAGEMENT_UNIT_ID' where summarization_id = 'NSndPineDensityWDFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.MANAGEMENT_UNIT_SUMMARY (PROJECT_GROUP_ID, MANAGEMENT_UNIT_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) 
SELECT M.PROJECT_GROUP_ID, M.MANAGEMENT_UNIT_ID, ''NSndPinPres'', ROUND((M.SndPinPres/T.TotalCount)*100)
FROM
(SELECT P.PROJECT_GROUP_ID, TS.MANAGEMENT_UNIT_ID, ''M'', COUNT(*) SndPinPres
FROM 
OBVM.CENTERPOINT C, OBVM.CENTERPOINT_DATA D, OBVM.TARGET_STATION TS, OBVM.PROJECT P 
WHERE D.ATTRIBUTE_ID = ''SndPinePres'' 
AND D.ATTRIBUTE_VALUE = ''Yes'' 
AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) 
AND D.CENTERPOINT_ID = C.CENTERPOINT_ID 
AND TS.STATION_ID = C.STATION_ID 
AND TS.PROJECT_ID = P.PROJECT_ID 
GROUP BY P.PROJECT_GROUP_ID, TS.MANAGEMENT_UNIT_ID) M,
(SELECT P.PROJECT_GROUP_ID, TS.MANAGEMENT_UNIT_ID, ''T'', COUNT(*) TotalCount
FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_DATA D, OBVM.TARGET_STATION TS, OBVM.PROJECT P 
WHERE D.ATTRIBUTE_ID = ''SndPinPres'' 
AND D.ATTRIBUTE_VALUE IS NOT NULL 
AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) 
AND D.CENTERPOINT_ID = C.CENTERPOINT_ID 
AND TS.STATION_ID = C.STATION_ID 
AND TS.PROJECT_ID = P.PROJECT_ID 
GROUP BY P.PROJECT_GROUP_ID, TS.MANAGEMENT_UNIT_ID) T
where M.PROJECT_GROUP_ID = T.PROJECT_GROUP_ID
and M.MANAGEMENT_UNIT_ID = T.MANAGEMENT_UNIT_ID' where summarization_id = 'NSndPinPres' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.MANAGEMENT_UNIT_SUMMARY (MANAGEMENT_UNIT_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.MANAGEMENT_UNIT_ID, P.PROJECT_GROUP_ID, ''NStemDensADFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE > DFC.DFC_HIGH THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.MANAGEMENT_UNIT MU, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''ShrubStemDensity'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID AND TS.COMMUNITY_TYPE_ID = MU.COMMUNITY_TYPE_ID AND TS.MANAGEMENT_UNIT_ID = MU.MANAGEMENT_UNIT_ID AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.MANAGEMENT_UNIT_ID' where summarization_id = 'NStemDensADFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.MANAGEMENT_UNIT_SUMMARY (MANAGEMENT_UNIT_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.MANAGEMENT_UNIT_ID, P.PROJECT_GROUP_ID, ''NStemDensBDFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE < DFC.DFC_LOW THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.MANAGEMENT_UNIT MU, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''TotalStemDensity'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID AND TS.COMMUNITY_TYPE_ID = MU.COMMUNITY_TYPE_ID AND TS.MANAGEMENT_UNIT_ID = MU.MANAGEMENT_UNIT_ID AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.MANAGEMENT_UNIT_ID' where summarization_id = 'NStemDensBDFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.MANAGEMENT_UNIT_SUMMARY (MANAGEMENT_UNIT_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.MANAGEMENT_UNIT_ID, P.PROJECT_GROUP_ID, ''NStemDensWDFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE BETWEEN nvl(DFC.DFC_LOW,-999999) AND nvl(DFC.DFC_HIGH,999999) THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.MANAGEMENT_UNIT MU, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''TotalStemDensity'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID AND TS.COMMUNITY_TYPE_ID = MU.COMMUNITY_TYPE_ID AND TS.MANAGEMENT_UNIT_ID = MU.MANAGEMENT_UNIT_ID AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.MANAGEMENT_UNIT_ID' where summarization_id = 'NStemDensWDFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.MANAGEMENT_UNIT_SUMMARY (MANAGEMENT_UNIT_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.MANAGEMENT_UNIT_ID, P.PROJECT_GROUP_ID, ''NSubCanopyADFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE > DFC.DFC_HIGH THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.MANAGEMENT_UNIT MU, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''SubCanopy'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID AND TS.COMMUNITY_TYPE_ID = MU.COMMUNITY_TYPE_ID AND TS.MANAGEMENT_UNIT_ID = MU.MANAGEMENT_UNIT_ID AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.MANAGEMENT_UNIT_ID' where summarization_id = 'NSubCanopyADFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.MANAGEMENT_UNIT_SUMMARY (MANAGEMENT_UNIT_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.MANAGEMENT_UNIT_ID, P.PROJECT_GROUP_ID, ''NSubCanopyBDFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE < DFC.DFC_LOW THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.MANAGEMENT_UNIT MU, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''SubCanopy'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID AND TS.COMMUNITY_TYPE_ID = MU.COMMUNITY_TYPE_ID AND TS.MANAGEMENT_UNIT_ID = MU.MANAGEMENT_UNIT_ID AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.MANAGEMENT_UNIT_ID' where summarization_id = 'NSubCanopyBDFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.MANAGEMENT_UNIT_SUMMARY (MANAGEMENT_UNIT_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.MANAGEMENT_UNIT_ID, P.PROJECT_GROUP_ID, ''NSubCanopyWDFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE BETWEEN nvl(DFC.DFC_LOW,-999999) AND nvl(DFC.DFC_HIGH,999999) THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.MANAGEMENT_UNIT MU, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''SubCanopy'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID AND TS.COMMUNITY_TYPE_ID = MU.COMMUNITY_TYPE_ID AND TS.MANAGEMENT_UNIT_ID = MU.MANAGEMENT_UNIT_ID AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.MANAGEMENT_UNIT_ID' where summarization_id = 'NSubCanopyWDFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.MANAGEMENT_UNIT_SUMMARY (MANAGEMENT_UNIT_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.MANAGEMENT_UNIT_ID, P.PROJECT_GROUP_ID, ''NTotalBasalAreaADFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE > DFC.DFC_HIGH THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.MANAGEMENT_UNIT MU, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''TotalBasalArea'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID AND TS.COMMUNITY_TYPE_ID = MU.COMMUNITY_TYPE_ID AND TS.MANAGEMENT_UNIT_ID = MU.MANAGEMENT_UNIT_ID AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.MANAGEMENT_UNIT_ID' where summarization_id = 'NTotalBasalAreaADFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.MANAGEMENT_UNIT_SUMMARY (MANAGEMENT_UNIT_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.MANAGEMENT_UNIT_ID, P.PROJECT_GROUP_ID, ''NTotalBasalAreaBDFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE < DFC.DFC_LOW THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.MANAGEMENT_UNIT MU, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''TotalBasalArea'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID AND TS.COMMUNITY_TYPE_ID = MU.COMMUNITY_TYPE_ID AND TS.MANAGEMENT_UNIT_ID = MU.MANAGEMENT_UNIT_ID AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.MANAGEMENT_UNIT_ID' where summarization_id = 'NTotalBasalAreaBDFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.MANAGEMENT_UNIT_SUMMARY (MANAGEMENT_UNIT_ID, PROJECT_GROUP_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT TS.MANAGEMENT_UNIT_ID, P.PROJECT_GROUP_ID, ''NTotalBasalAreaWDFC'', SUM(CASE WHEN D.SUMMARIZED_VALUE BETWEEN nvl(DFC.DFC_LOW,-999999) AND nvl(DFC.DFC_HIGH,999999) THEN 1 ELSE 0 END) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS, OBVM.MANAGEMENT_UNIT MU, OBVM.DESIRED_FUTURE_CONDITION DFC, OBVM.PROJECT P WHERE D.SUMMARIZATION_ID = ''TotalBasalArea'' AND D.SUMMARIZED_VALUE IS NOT NULL AND DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID AND DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID AND TS.COMMUNITY_TYPE_ID = MU.COMMUNITY_TYPE_ID AND TS.MANAGEMENT_UNIT_ID = MU.MANAGEMENT_UNIT_ID AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID AND TS.PROJECT_ID = P.PROJECT_ID GROUP BY P.PROJECT_GROUP_ID, TS.MANAGEMENT_UNIT_ID' where summarization_id = 'NTotalBasalAreaWDFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.CENTERPOINT_SUMMARY (CENTERPOINT_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT C.CENTERPOINT_ID, ''OverStoryCover'', ROUND(100 - (AVG(Cast(D.ATTRIBUTE_VALUE as decimal)) * 1.04),0) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_DATA D WHERE D.ATTRIBUTE_ID like ''OvrstryCv%'' AND D.ATTRIBUTE_VALUE IS NOT NULL AND D.ATTRIBUTE_VALUE NOT IN (''-9999'', ''-8888'', ''ZZ'', ''XX'') AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID GROUP BY C.CENTERPOINT_ID' where summarization_id = 'OverStoryCover' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.CENTERPOINT_SUMMARY (CENTERPOINT_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT D.CENTERPOINT_ID, ''OverStoryCoverDFC'', case 
when (select count (DESIRED_FUTURE_CONDITION_ID) from OBVM.DESIRED_FUTURE_CONDITION DFC WHERE DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID and DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID) = 0 then null 
when D.SUMMARIZED_VALUE < (select DFC.DFC_LOW from OBVM.DESIRED_FUTURE_CONDITION DFC WHERE DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID and DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID) then -1 
when D.SUMMARIZED_VALUE > (select DFC.DFC_HIGH from OBVM.DESIRED_FUTURE_CONDITION DFC WHERE DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID and DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID) then 1 
else 0 end 
FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS WHERE D.SUMMARIZATION_ID = ''OverStoryCover'' AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID' where summarization_id = 'OverStoryCoverDFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.MANAGEMENT_UNIT_SUMMARY (PROJECT_GROUP_ID, MANAGEMENT_UNIT_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) 
select T.PROJECT_GROUP_ID, T.MANAGEMENT_UNIT_ID,''PctCanopyAgeMature'', ROUND((M.MatureCount/T.TotalCount)*100)
from
(SELECT P.PROJECT_GROUP_ID, TS.MANAGEMENT_UNIT_ID, ''M'', COUNT(*) MatureCount
FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_DATA D, OBVM.TARGET_STATION TS, OBVM.PROJECT P 
WHERE D.ATTRIBUTE_ID = ''CanopyAge'' 
AND D.ATTRIBUTE_VALUE in (''Older mature'',''Old growth'') 
AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) 
AND D.CENTERPOINT_ID = C.CENTERPOINT_ID 
AND TS.STATION_ID = C.STATION_ID 
AND TS.PROJECT_ID = P.PROJECT_ID 
GROUP BY P.PROJECT_GROUP_ID, TS.MANAGEMENT_UNIT_ID) M,
(SELECT P.PROJECT_GROUP_ID, TS.MANAGEMENT_UNIT_ID, ''T'', COUNT(*) TotalCount
FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_DATA D, OBVM.TARGET_STATION TS, OBVM.PROJECT P 
WHERE D.ATTRIBUTE_ID = ''CanopyAge'' 
AND D.ATTRIBUTE_VALUE IS NOT NULL 
AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) 
AND D.CENTERPOINT_ID = C.CENTERPOINT_ID 
AND TS.STATION_ID = C.STATION_ID 
AND TS.PROJECT_ID = P.PROJECT_ID 
GROUP BY P.PROJECT_GROUP_ID, TS.MANAGEMENT_UNIT_ID) T
where M.PROJECT_GROUP_ID = T.PROJECT_GROUP_ID
and M.MANAGEMENT_UNIT_ID = T.MANAGEMENT_UNIT_ID' where summarization_id = 'PctCanopyAgeMature' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.CENTERPOINT_SUMMARY (CENTERPOINT_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT D.CENTERPOINT_ID, ''PctCanopyAgeMatureDFC'', case 
when (select count (DESIRED_FUTURE_CONDITION_ID) from OBVM.DESIRED_FUTURE_CONDITION DFC WHERE DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID and DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID) = 0 then null 
when D.SUMMARIZED_VALUE < (select DFC.DFC_LOW from OBVM.DESIRED_FUTURE_CONDITION DFC WHERE DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID and DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID) then -1 
when D.SUMMARIZED_VALUE > (select DFC.DFC_HIGH from OBVM.DESIRED_FUTURE_CONDITION DFC WHERE DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID and DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID) then 1 
else 0 end 
FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS WHERE D.SUMMARIZATION_ID = ''PctCanopyAgeMature'' AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID' where summarization_id = 'PctCanopyAgeMatureDFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.CENTERPOINT_SUMMARY (CENTERPOINT_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT C.CENTERPOINT_ID, ''PineStemDensity'', SUM(Cast(D.ATTRIBUTE_VALUE as decimal)) FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_DATA D WHERE D.ATTRIBUTE_ID = ''PstemDens'' AND D.ATTRIBUTE_VALUE IS NOT NULL AND D.ATTRIBUTE_VALUE NOT IN (''-9999'', ''-8888'', ''ZZ'', ''XX'') AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID GROUP BY C.CENTERPOINT_ID' where summarization_id = 'PineStemDensity' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.CENTERPOINT_SUMMARY (CENTERPOINT_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT D.CENTERPOINT_ID, ''PineStemDensityDFC'', case 
when (select count (DESIRED_FUTURE_CONDITION_ID) from OBVM.DESIRED_FUTURE_CONDITION DFC WHERE DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID and DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID) = 0 then null 
when D.SUMMARIZED_VALUE < (select DFC.DFC_LOW from OBVM.DESIRED_FUTURE_CONDITION DFC WHERE DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID and DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID) then -1 
when D.SUMMARIZED_VALUE > (select DFC.DFC_HIGH from OBVM.DESIRED_FUTURE_CONDITION DFC WHERE DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID and DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID) then 1 
else 0 end 
FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS WHERE D.SUMMARIZATION_ID = ''PineStemDensity'' AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID' where summarization_id = 'PineStemDensityDFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.CENTERPOINT_SUMMARY (CENTERPOINT_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT C.CENTERPOINT_ID, ''ScrubStemDensity'', SUM(AC.ACTUAL_VALUE)/3 FROM OBVM.CENTERPOINT C, OBVM.QUADRAT_DATA D, OBVM.ATTRIBUTE_CLASS AC WHERE D.ATTRIBUTE_ID = ''ScrubStems'' AND D.ATTRIBUTE_VALUE IS NOT NULL AND AC.ATTRIBUTE_ID = D.ATTRIBUTE_ID AND D.ATTRIBUTE_VALUE = AC.DISPLAY_VALUE AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID GROUP BY C.CENTERPOINT_ID' where summarization_id = 'ScrubStemDensity' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.QUADRAT_SUMMARY (CENTERPOINT_ID, QUADRAT, SUMMARIZATION_ID, SUMMARIZED_VALUE) 
SELECT C.CENTERPOINT_ID, D.QUADRAT, ''SerenoaIlexCov'', SUM(ac.actual_value)
FROM OBVM.CENTERPOINT C, OBVM.QUADRAT_DATA D, OBVM.attribute_class ac 
WHERE C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) 
AND D.CENTERPOINT_ID = C.CENTERPOINT_ID 
AND D.ATTRIBUTE_ID in (''IlexCov'', ''SerenoaCov'') 
and d.attribute_id = ac.attribute_id
AND d.attribute_value = ac.display_value
AND D.ATTRIBUTE_VALUE IS NOT NULL 
AND D.ATTRIBUTE_VALUE <> ''-9999'' 
GROUP BY C.CENTERPOINT_ID, D.QUADRAT' where summarization_id = 'SerenoaIlexCov' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.CENTERPOINT_SUMMARY (CENTERPOINT_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT C.CENTERPOINT_ID, ''SerenoaPetioleDensity'', ROUND(AVG(AC.ACTUAL_VALUE), 3) FROM OBVM.CENTERPOINT C, OBVM.QUADRAT_DATA D, OBVM.ATTRIBUTE_CLASS AC WHERE D.ATTRIBUTE_ID = ''SerPetDens'' AND D.ATTRIBUTE_VALUE IS NOT NULL AND AC.ATTRIBUTE_ID = D.ATTRIBUTE_ID AND D.ATTRIBUTE_VALUE = AC.DISPLAY_VALUE AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID GROUP BY C.CENTERPOINT_ID' where summarization_id = 'SerenoaPetioleDensity' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.CENTERPOINT_SUMMARY (CENTERPOINT_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT D.CENTERPOINT_ID, ''SerenoaPetioleDensityDFC'', case 
when (select count (DESIRED_FUTURE_CONDITION_ID) from OBVM.DESIRED_FUTURE_CONDITION DFC WHERE DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID and DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID) = 0 then null 
when D.SUMMARIZED_VALUE < (select DFC.DFC_LOW from OBVM.DESIRED_FUTURE_CONDITION DFC WHERE DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID and DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID) then -1 
when D.SUMMARIZED_VALUE > (select DFC.DFC_HIGH from OBVM.DESIRED_FUTURE_CONDITION DFC WHERE DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID and DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID) then 1 
else 0 end 
FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS WHERE D.SUMMARIZATION_ID = ''SerenoaPetioleDensity'' AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID' where summarization_id = 'SerenoaPetioleDensityDFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.QUADRAT_SUMMARY (CENTERPOINT_ID, QUADRAT, SUMMARIZATION_ID, SUMMARIZED_VALUE) 
SELECT distinct SC.CENTERPOINT_ID, SC.QUADRAT, ''ShbCovMinusDwf'', SC.ACTUAL_VALUE - DSC.ACTUAL_VALUE 
FROM 
(SELECT C.CENTERPOINT_ID, D.QUADRAT, AC.ACTUAL_VALUE 
FROM OBVM.CENTERPOINT C, OBVM.QUADRAT_DATA D, OBVM.ATTRIBUTE_CLASS AC 
WHERE D.ATTRIBUTE_ID = ''ShrubCov'' 
and ac.attribute_id = d.attribute_id 
AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) 
AND D.CENTERPOINT_ID = C.CENTERPOINT_ID 
AND D.ATTRIBUTE_VALUE IS NOT NULL 
AND D.ATTRIBUTE_VALUE <> ''-9999'' 
AND d.attribute_value = ac.display_value) SC, 
(SELECT C.CENTERPOINT_ID, D.QUADRAT, AC.ACTUAL_VALUE 
FROM OBVM.CENTERPOINT C, OBVM.QUADRAT_DATA D, OBVM.ATTRIBUTE_CLASS AC 
WHERE D.ATTRIBUTE_ID = ''DwfShrbCov'' 
and ac.attribute_id = d.attribute_id 
AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) 
AND D.CENTERPOINT_ID = C.CENTERPOINT_ID 
AND D.ATTRIBUTE_VALUE IS NOT NULL 
AND D.ATTRIBUTE_VALUE <> ''-9999'' 
AND d.attribute_value = ac.display_value) DSC 
where sc.centerpoint_id = dsc.centerpoint_id 
and sc.quadrat = dsc.quadrat' where summarization_id = 'ShbCovMinusDwf' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.QUADRAT_SUMMARY (CENTERPOINT_ID, QUADRAT, SUMMARIZATION_ID, SUMMARIZED_VALUE) 
SELECT distinct SC.CENTERPOINT_ID, SC.QUADRAT, ''ShbCovMinusIlex'', SC.ACTUAL_VALUE - DSC.ACTUAL_VALUE 
FROM 
(SELECT C.CENTERPOINT_ID, D.QUADRAT, AC.ACTUAL_VALUE 
FROM OBVM.CENTERPOINT C, OBVM.QUADRAT_DATA D, OBVM.ATTRIBUTE_CLASS AC 
WHERE D.ATTRIBUTE_ID = ''ShrubCov'' 
and ac.attribute_id = d.attribute_id 
AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) 
AND D.CENTERPOINT_ID = C.CENTERPOINT_ID 
AND D.ATTRIBUTE_VALUE IS NOT NULL 
AND D.ATTRIBUTE_VALUE <> ''-9999'' 
AND d.attribute_value = ac.display_value) SC, 
(SELECT C.CENTERPOINT_ID, D.QUADRAT, AC.ACTUAL_VALUE 
FROM OBVM.CENTERPOINT C, OBVM.QUADRAT_DATA D, OBVM.ATTRIBUTE_CLASS AC 
WHERE D.ATTRIBUTE_ID = ''IlexCov'' 
and ac.attribute_id = d.attribute_id 
AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) 
AND D.CENTERPOINT_ID = C.CENTERPOINT_ID 
AND D.ATTRIBUTE_VALUE IS NOT NULL 
AND D.ATTRIBUTE_VALUE <> ''-9999'' 
AND d.attribute_value = ac.display_value) DSC 
where sc.centerpoint_id = dsc.centerpoint_id 
and sc.quadrat = dsc.quadrat' where summarization_id = 'ShbCovMinusIlex' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.CENTERPOINT_SUMMARY (CENTERPOINT_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT C.CENTERPOINT_ID, ''ShrubStemDensity'', ROUND(AVG(AC.ACTUAL_VALUE), 3) FROM OBVM.CENTERPOINT C, OBVM.QUADRAT_DATA D, OBVM.ATTRIBUTE_CLASS AC WHERE D.ATTRIBUTE_ID = ''ShrubStems'' AND D.ATTRIBUTE_VALUE IS NOT NULL AND AC.ATTRIBUTE_ID = D.ATTRIBUTE_ID AND D.ATTRIBUTE_VALUE = AC.DISPLAY_VALUE AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID GROUP BY C.CENTERPOINT_ID' where summarization_id = 'ShrubStemDensity' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.CENTERPOINT_SUMMARY (CENTERPOINT_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT D.CENTERPOINT_ID, ''ShrubStemDensityDFC'', case 
when (select count (DESIRED_FUTURE_CONDITION_ID) from OBVM.DESIRED_FUTURE_CONDITION DFC WHERE DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID and DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID) = 0 then null 
when D.SUMMARIZED_VALUE < (select DFC.DFC_LOW from OBVM.DESIRED_FUTURE_CONDITION DFC WHERE DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID and DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID) then -1 
when D.SUMMARIZED_VALUE > (select DFC.DFC_HIGH from OBVM.DESIRED_FUTURE_CONDITION DFC WHERE DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID and DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID) then 1 
else 0 end 
FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS WHERE D.SUMMARIZATION_ID = ''ShrubStemDensity'' AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID' where summarization_id = 'ShrubStemDensityDFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.CENTERPOINT_SUMMARY (CENTERPOINT_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT C.CENTERPOINT_ID, ''SndPineDensity'', ROUND((Cast(D.ATTRIBUTE_VALUE as decimal) / 0.03804),3)  FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_DATA D WHERE D.ATTRIBUTE_ID = ''SndPinDens'' AND D.ATTRIBUTE_VALUE IS NOT NULL AND D.ATTRIBUTE_VALUE NOT IN (''-9999'', ''-8888'', ''ZZ'', ''XX'') AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID' where summarization_id = 'SndPineDensity' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.CENTERPOINT_SUMMARY (CENTERPOINT_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT D.CENTERPOINT_ID, ''SndPineDensityDFC'', case 
when (select count (DESIRED_FUTURE_CONDITION_ID) from OBVM.DESIRED_FUTURE_CONDITION DFC WHERE DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID and DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID) = 0 then null 
when D.SUMMARIZED_VALUE < (select DFC.DFC_LOW from OBVM.DESIRED_FUTURE_CONDITION DFC WHERE DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID and DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID) then -1 
when D.SUMMARIZED_VALUE > (select DFC.DFC_HIGH from OBVM.DESIRED_FUTURE_CONDITION DFC WHERE DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID and DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID) then 1 
else 0 end 
FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS WHERE D.SUMMARIZATION_ID = ''SndPineDensity'' AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID' where summarization_id = 'SndPineDensityDFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.CENTERPOINT_SUMMARY (CENTERPOINT_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT C.CENTERPOINT_ID, ''SubCanopy'', ROUND(AVG(Cast(D.ATTRIBUTE_VALUE as decimal)), 3) FROM OBVM.CENTERPOINT C, OBVM.QUADRAT_DATA D WHERE D.ATTRIBUTE_ID = ''SubCan'' AND D.ATTRIBUTE_VALUE IS NOT NULL AND D.ATTRIBUTE_VALUE NOT IN (''-9999'', ''-8888'', ''ZZ'', ''XX'') AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID GROUP BY C.CENTERPOINT_ID' where summarization_id = 'SubCanopy' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.CENTERPOINT_SUMMARY (CENTERPOINT_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT D.CENTERPOINT_ID, ''SubCanopyDFC'', case 
when (select count (DESIRED_FUTURE_CONDITION_ID) from OBVM.DESIRED_FUTURE_CONDITION DFC WHERE DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID and DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID) = 0 then null 
when D.SUMMARIZED_VALUE < (select DFC.DFC_LOW from OBVM.DESIRED_FUTURE_CONDITION DFC WHERE DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID and DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID) then -1 
when D.SUMMARIZED_VALUE > (select DFC.DFC_HIGH from OBVM.DESIRED_FUTURE_CONDITION DFC WHERE DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID and DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID) then 1 
else 0 end 
FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS WHERE D.SUMMARIZATION_ID = ''SubCanopy'' AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID' where summarization_id = 'SubCanopyDFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.CENTERPOINT_SUMMARY (CENTERPOINT_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT C.CENTERPOINT_ID,  ''TotalBasalArea'', (Cast(D.ATTRIBUTE_VALUE as decimal))  FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_DATA D WHERE D.ATTRIBUTE_ID = ''TotalBA'' AND D.ATTRIBUTE_VALUE IS NOT NULL AND D.ATTRIBUTE_VALUE NOT IN (''-9999'', ''-8888'', ''ZZ'', ''XX'') AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID' where summarization_id = 'TotalBasalArea' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.CENTERPOINT_SUMMARY (CENTERPOINT_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT D.CENTERPOINT_ID, ''TotalBasalAreaDFC'', case 
when (select count (DESIRED_FUTURE_CONDITION_ID) from OBVM.DESIRED_FUTURE_CONDITION DFC WHERE DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID and DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID) = 0 then null 
when D.SUMMARIZED_VALUE < (select DFC.DFC_LOW from OBVM.DESIRED_FUTURE_CONDITION DFC WHERE DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID and DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID) then -1 
when D.SUMMARIZED_VALUE > (select DFC.DFC_HIGH from OBVM.DESIRED_FUTURE_CONDITION DFC WHERE DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID and DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID) then 1 
else 0 end 
FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS WHERE D.SUMMARIZATION_ID = ''TotalBasalArea'' AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID' where summarization_id = 'TotalBasalAreaDFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.CENTERPOINT_SUMMARY (CENTERPOINT_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT C.CENTERPOINT_ID, ''TotalStemDensity'', ROUND((Cast(D.ATTRIBUTE_VALUE as decimal) / 0.03804),3)  FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_DATA D WHERE D.ATTRIBUTE_ID = ''StemDens'' AND D.ATTRIBUTE_VALUE IS NOT NULL AND D.ATTRIBUTE_VALUE NOT IN (''-9999'', ''-8888'', ''ZZ'', ''XX'') AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID' where summarization_id = 'TotalStemDensity' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.CENTERPOINT_SUMMARY (CENTERPOINT_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT D.CENTERPOINT_ID, ''TotalStemDensityDFC'', case 
when (select count (DESIRED_FUTURE_CONDITION_ID) from OBVM.DESIRED_FUTURE_CONDITION DFC WHERE DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID and DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID) = 0 then null 
when D.SUMMARIZED_VALUE < (select DFC.DFC_LOW from OBVM.DESIRED_FUTURE_CONDITION DFC WHERE DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID and DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID) then -1 
when D.SUMMARIZED_VALUE > (select DFC.DFC_HIGH from OBVM.DESIRED_FUTURE_CONDITION DFC WHERE DFC.SUMMARIZATION_ID = D.SUMMARIZATION_ID and DFC.MANAGEMENT_UNIT_ID = TS.MANAGEMENT_UNIT_ID) then 1 
else 0 end 
FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_SUMMARY D, OBVM.TARGET_STATION TS WHERE D.SUMMARIZATION_ID = ''TotalStemDensity'' AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID AND TS.STATION_ID = C.STATION_ID' where summarization_id = 'TotalStemDensityDFC' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.QUADRAT_SUMMARY (CENTERPOINT_ID, QUADRAT, SUMMARIZATION_ID, SUMMARIZED_VALUE) 
SELECT C.CENTERPOINT_ID, D.QUADRAT, ''TotMidStoryCov'', SUM(ac.actual_value)
FROM OBVM.CENTERPOINT C, OBVM.QUADRAT_DATA D, OBVM.attribute_class ac 
WHERE C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) 
AND D.CENTERPOINT_ID = C.CENTERPOINT_ID 
AND D.ATTRIBUTE_ID in (''ShrubCov'', ''SerenoaCov'') 
and d.attribute_id = ac.attribute_id
AND d.attribute_value = ac.display_value
AND D.ATTRIBUTE_VALUE IS NOT NULL 
AND D.ATTRIBUTE_VALUE <> ''-9999'' 
GROUP BY C.CENTERPOINT_ID, D.QUADRAT' where summarization_id = 'TotMidStoryCov' go
update obvm.summarization set summarization_statement = 'INSERT INTO OBVM.CENTERPOINT_SUMMARY (CENTERPOINT_ID, SUMMARIZATION_ID, SUMMARIZED_VALUE) SELECT C.CENTERPOINT_ID, ''TreePresenceGT15ft'', D.ATTRIBUTE_VALUE FROM OBVM.CENTERPOINT C, OBVM.CENTERPOINT_DATA D WHERE D.ATTRIBUTE_ID = ''TreePres15'' AND D.ATTRIBUTE_VALUE = ''Yes'' AND C.UPLOAD_BATCH_ID IN (@UPLOAD_BATCH_IDS) AND D.CENTERPOINT_ID = C.CENTERPOINT_ID' where summarization_id = 'TreePresenceGT15ft' go

	update obvm.SUMMARIZATION 
		set SUMMARIZATION_STATEMENT = REPLACE(SUMMARIZATION_STATEMENT, 'ROUND((M.MatureCount/T.TotalCount)*100)', 'ROUND((M.MatureCount/T.TotalCount)*100, 2)');
	update obvm.SUMMARIZATION 
		set SUMMARIZATION_STATEMENT = REPLACE(SUMMARIZATION_STATEMENT, 'ROUND((M.SndPinPres/T.TotalCount)*100)', 'ROUND((M.SndPinPres/T.TotalCount)*100, 2)');
	update obvm.SUMMARIZATION 
		set SUMMARIZATION_STATEMENT = REPLACE(SUMMARIZATION_STATEMENT, 'ROUND((M.LLPineRegen/T.TotalCount)*100)', 'ROUND((M.LLPineRegen/T.TotalCount)*100, 2)');
	update obvm.SUMMARIZATION 
		set SUMMARIZATION_STATEMENT = REPLACE(SUMMARIZATION_STATEMENT, 'TS.COMMUNITY_TYPE_ID, ''T''', 'TS.COMMUNITY_TYPE_ID, ''T'' as [Type]');
	update obvm.SUMMARIZATION 
		set SUMMARIZATION_STATEMENT = REPLACE(SUMMARIZATION_STATEMENT, 'TS.COMMUNITY_TYPE_ID, ''M''', 'TS.COMMUNITY_TYPE_ID, ''M'' as [Type]');
	update obvm.SUMMARIZATION 
		set SUMMARIZATION_STATEMENT = REPLACE(SUMMARIZATION_STATEMENT, 'TS.MANAGEMENT_UNIT_ID, ''T''', 'TS.MANAGEMENT_UNIT_ID, ''T'' as [Type]');
	update obvm.SUMMARIZATION 
		set SUMMARIZATION_STATEMENT = REPLACE(SUMMARIZATION_STATEMENT, 'TS.MANAGEMENT_UNIT_ID, ''M''', 'TS.MANAGEMENT_UNIT_ID, ''M'' as [Type]');
	update obvm.SUMMARIZATION 
		set SUMMARIZATION_STATEMENT = REPLACE(SUMMARIZATION_STATEMENT, 'to_number(BasalPine.attribute_value)', 'Cast(BasalPine.attribute_value as Decimal)');
	update obvm.SUMMARIZATION 
		set SUMMARIZATION_STATEMENT = REPLACE(SUMMARIZATION_STATEMENT, 'to_number(LLPineBA.attribute_value)', 'Cast(LLPineBA.attribute_value as Decimal)');

